%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/

%% Created for SMLee at 2017-12-22 16:54:01 +0900 


%% Saved with string encoding Unicode (UTF-8) 



@incollection{McCloskey:1989aa,
	Abstract = {Publisher Summary Connectionist networks in which information is stored in weights on connections among simple processing units have attracted considerable interest in cognitive science. Much of the interest centers around two characteristics of these networks. First, the weights on connections between units need not be prewired by the model builder but rather may be established through training in which items to be learned are presented repeatedly to the network and the connection weights are adjusted in small increments according to a learning algorithm. Second, the networks may represent information in a distributed fashion. This chapter discusses the catastrophic interference in connectionist networks. Distributed representations established through the application of learning algorithms have several properties that are claimed to be desirable from the standpoint of modeling human cognition. These properties include content-addressable memory and so-called automatic generalization in which a network trained on a set of items responds correctly to other untrained items within the same domain. New learning may interfere catastrophically with old learning when networks are trained sequentially. The analysis of the causes of interference implies that at least some interference will occur whenever new learning may alter weights involved in representing old learning, and the simulation results demonstrate only that interference is catastrophic in some specific networks.},
	Author = {Michael McCloskey and Neal J. Cohen},
	Date-Added = {2017-12-22 07:41:54 +0000},
	Date-Modified = {2017-12-22 07:42:39 +0000},
	Doi = {https://doi.org/10.1016/S0079-7421(08)60536-8},
	Editor = {Gordon H. Bower},
	Issn = {0079-7421},
	Number = {Supplement C},
	Pages = {109 - 165},
	Publisher = {Academic Press},
	Series = {Psychology of Learning and Motivation},
	Title = {Catastrophic Interference in Connectionist Networks: The Sequential Learning Problem},
	Url = {http://www.sciencedirect.com/science/article/pii/S0079742108605368},
	Volume = {24},
	Year = {1989},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0079742108605368},
	Bdsk-Url-2 = {https://doi.org/10.1016/S0079-7421(08)60536-8},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWNDbG9za2V5MTk4OWFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QTWNDbG9za2V5MTk4OWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TWNDbG9za2V5MTk4OWFhMAAADgAiABAATQBjAEMAbABvAHMAawBlAHkAMQA5ADgAOQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL01jQ2xvc2tleTE5ODlhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==}}

@article{Kingma:2013aa,
	Author = {Kingma, Diederik P and Welling, Max},
	Date-Added = {2017-12-21 12:44:10 +0000},
	Date-Modified = {2017-12-21 12:44:38 +0000},
	Journal = {arXiv preprint arXiv:1312.6114},
	Title = {Auto-encoding variational bayes},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvS2luZ21hMjAxM2FhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NS2luZ21hMjAxM2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6S2luZ21hMjAxM2FhMAAOABwADQBLAGkAbgBnAG0AYQAyADAAMQAzAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvS2luZ21hMjAxM2FhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=}}

@article{Isola:2016aa,
	Archiveprefix = {arXiv},
	Author = {Phillip Isola and Jun{-}Yan Zhu and Tinghui Zhou and Alexei A. Efros},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/IsolaZZE16},
	Date-Added = {2017-12-13 14:37:04 +0000},
	Date-Modified = {2017-12-13 14:38:42 +0000},
	Eprint = {1611.07004},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:41:37 +0200},
	Title = {Image-to-Image Translation with Conditional Adversarial Networks},
	Url = {http://arxiv.org/abs/1611.07004},
	Volume = {abs/1611.07004},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSXNvbGEyMDE2YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxJc29sYTIwMTZhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpJc29sYTIwMTZhYTAAAA4AGgAMAEkAcwBvAGwAYQAyADAAMQA2AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSXNvbGEyMDE2YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://arxiv.org/abs/1611.07004}}

@article{Zhang:2016ab,
	Archiveprefix = {arXiv},
	Author = {Han Zhang and Tao Xu and Hongsheng Li and Shaoting Zhang and Xiaolei Huang and Xiaogang Wang and Dimitris N. Metaxas},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/ZhangXLZHWM16},
	Date-Added = {2017-12-13 14:35:47 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Eprint = {1612.03242},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:41:37 +0200},
	Title = {StackGAN: Text to Photo-realistic Image Synthesis with Stacked Generative Adversarial Networks},
	Url = {http://arxiv.org/abs/1612.03242},
	Volume = {abs/1612.03242},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmhhbmcyMDE2YWIw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxaaGFuZzIwMTZhYjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpaaGFuZzIwMTZhYjAAAA4AGgAMAFoAaABhAG4AZwAyADAAMQA2AGEAYgAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmhhbmcyMDE2YWIwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://arxiv.org/abs/1612.03242}}

@incollection{Goodfellow:2014aa,
	Author = {Goodfellow, Ian and Pouget-Abadie, Jean and Mirza, Mehdi and Xu, Bing and Warde-Farley, David and Ozair, Sherjil and Courville, Aaron and Bengio, Yoshua},
	Booktitle = {Advances in Neural Information Processing Systems 27},
	Date-Added = {2017-12-13 14:33:04 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Editor = {Z. Ghahramani and M. Welling and C. Cortes and N. D. Lawrence and K. Q. Weinberger},
	Pages = {2672--2680},
	Publisher = {Curran Associates, Inc.},
	Title = {Generative Adversarial Nets},
	Url = {http://papers.nips.cc/paper/5423-generative-adversarial-nets.pdf},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR29vZGZlbGxvdzIwMTRhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EUdvb2RmZWxsb3cyMDE0YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkdvb2RmZWxsb3cyMDE0YWEwAA4AJAARAEcAbwBvAGQAZgBlAGwAbABvAHcAMgAwADEANABhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0dvb2RmZWxsb3cyMDE0YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://papers.nips.cc/paper/5423-generative-adversarial-nets.pdf}}

@article{Szegedy:2013aa,
	Archiveprefix = {arXiv},
	Author = {Christian Szegedy and Wojciech Zaremba and Ilya Sutskever and Joan Bruna and Dumitru Erhan and Ian J. Goodfellow and Rob Fergus},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/SzegedyZSBEGF13},
	Date-Added = {2017-12-13 14:12:57 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Eprint = {1312.6199},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:41:52 +0200},
	Title = {Intriguing properties of neural networks},
	Url = {http://arxiv.org/abs/1312.6199},
	Volume = {abs/1312.6199},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU3plZ2VkeTIwMTNhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DlN6ZWdlZHkyMDEzYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlN6ZWdlZHkyMDEzYWEwAAAOAB4ADgBTAHoAZQBnAGUAZAB5ADIAMAAxADMAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9TemVnZWR5MjAxM2FhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://arxiv.org/abs/1312.6199}}

@article{Zeiler:2013aa,
	Archiveprefix = {arXiv},
	Author = {Matthew D. Zeiler and Rob Fergus},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/ZeilerF13},
	Date-Added = {2017-12-13 14:10:46 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Eprint = {1311.2901},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:40:45 +0200},
	Title = {Visualizing and Understanding Convolutional Networks},
	Url = {http://arxiv.org/abs/1311.2901},
	Volume = {abs/1311.2901},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmVpbGVyMjAxM2FhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NWmVpbGVyMjAxM2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WmVpbGVyMjAxM2FhMAAOABwADQBaAGUAaQBsAGUAcgAyADAAMQAzAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmVpbGVyMjAxM2FhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://arxiv.org/abs/1311.2901}}

@article{Mahendran:2014aa,
	Archiveprefix = {arXiv},
	Author = {Aravindh Mahendran and Andrea Vedaldi},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/MahendranV14},
	Date-Added = {2017-12-13 14:06:57 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Eprint = {1412.0035},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:41:25 +0200},
	Title = {Understanding Deep Image Representations by Inverting Them},
	Url = {http://arxiv.org/abs/1412.0035},
	Volume = {abs/1412.0035},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWFoZW5kcmFuMjAxNGFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QTWFoZW5kcmFuMjAxNGFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TWFoZW5kcmFuMjAxNGFhMAAADgAiABAATQBhAGgAZQBuAGQAcgBhAG4AMgAwADEANABhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL01haGVuZHJhbjIwMTRhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://arxiv.org/abs/1412.0035}}

@article{Simonyan:2013aa,
	Archiveprefix = {arXiv},
	Author = {Karen Simonyan and Andrea Vedaldi and Andrew Zisserman},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/SimonyanVZ13},
	Date-Added = {2017-12-13 14:05:48 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Eprint = {1312.6034},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:42:21 +0200},
	Title = {Deep Inside Convolutional Networks: Visualising Image Classification Models and Saliency Maps},
	Url = {http://arxiv.org/abs/1312.6034},
	Volume = {abs/1312.6034},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU2ltb255YW4yMDEzYWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9TaW1vbnlhbjIwMTNhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpTaW1vbnlhbjIwMTNhYTAADgAgAA8AUwBpAG0AbwBuAHkAYQBuADIAMAAxADMAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9TaW1vbnlhbjIwMTNhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {http://arxiv.org/abs/1312.6034}}

@article{Ioffe:2015aa,
	Archiveprefix = {arXiv},
	Author = {Sergey Ioffe and Christian Szegedy},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/IoffeS15},
	Date-Added = {2017-12-13 08:56:12 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Eprint = {1502.03167},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:40:49 +0200},
	Title = {Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift},
	Url = {http://arxiv.org/abs/1502.03167},
	Volume = {abs/1502.03167},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSW9mZmUyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxJb2ZmZTIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpJb2ZmZTIwMTVhYTAAAA4AGgAMAEkAbwBmAGYAZQAyADAAMQA1AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSW9mZmUyMDE1YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://arxiv.org/abs/1502.03167}}

@inproceedings{Gupta:2017aa,
	Author = {Rahul Gupta and Soham Pal and Aditya Kanade and Shirish K. Shevade},
	Booktitle = {AAAI},
	Date-Added = {2017-12-12 02:37:21 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Title = {DeepFix: Fixing Common C Language Errors by Deep Learning},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR3VwdGEyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxHdXB0YTIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpHdXB0YTIwMTdhYTAAAA4AGgAMAEcAdQBwAHQAYQAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR3VwdGEyMDE3YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=}}

@article{Rebuffi:2016aa,
	Archiveprefix = {arXiv},
	Author = {Sylvestre{-}Alvise Rebuffi and Alexander Kolesnikov and Christoph H. Lampert},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/RebuffiKL16},
	Date-Added = {2017-12-08 05:52:47 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Eprint = {1611.07725},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:42:11 +0200},
	Title = {iCaRL: Incremental Classifier and Representation Learning},
	Url = {http://arxiv.org/abs/1611.07725},
	Volume = {abs/1611.07725},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUmVidWZmaTIwMTZhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DlJlYnVmZmkyMDE2YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlJlYnVmZmkyMDE2YWEwAAAOAB4ADgBSAGUAYgB1AGYAZgBpADIAMAAxADYAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9SZWJ1ZmZpMjAxNmFhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://arxiv.org/abs/1611.07725}}

@article{Al-Mohair:2015aa,
	Abstract = {Abstract Human skin detection is an essential step in most human detection applications, such as face detection. The performance of any skin detection system depends on assessment of two components: feature extraction and detection method. Skin color is a robust cue used for human skin detection. However, the performance of color-based detection methods is constrained by the overlapping color spaces of skin and non-skin pixels. To increase the accuracy of skin detection, texture features can be exploited as additional cues. In this paper, we propose a hybrid skin detection method based on YIQ color space and the statistical features of skin. A Multilayer Perceptron artificial neural network, which is a universal classifier, is combined with the k-means clustering method to accurately detect skin. The experimental results show that the proposed method can achieve high accuracy with an F1-measure of 87.82% based on images from the ECU database.},
	Author = {Hani K. Al-Mohair and Junita Mohamad Saleh and Shahrel Azmin Suandi},
	Date-Added = {2017-12-07 02:28:34 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {https://doi.org/10.1016/j.asoc.2015.04.046},
	Issn = {1568-4946},
	Journal = {Applied Soft Computing},
	Keywords = {Skin color detection, Color space, Neural networks, Texture analysis, k-Means},
	Number = {Supplement C},
	Pages = {337 - 347},
	Title = {Hybrid Human Skin Detection Using Neural Network and K-Means Clustering Technique},
	Url = {http://www.sciencedirect.com/science/article/pii/S1568494615002732},
	Volume = {33},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQWwtTW9oYWlyMjAxNWFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QQWwtTW9oYWlyMjAxNWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6QWwtTW9oYWlyMjAxNWFhMAAADgAiABAAQQBsAC0ATQBvAGgAYQBpAHIAMgAwADEANQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0FsLU1vaGFpcjIwMTVhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S1568494615002732},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.asoc.2015.04.046}}

@article{Cao:2016aa,
	Archiveprefix = {arXiv},
	Author = {Zhe Cao and Tomas Simon and Shih{-}En Wei and Yaser Sheikh},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/CaoSWS16},
	Date-Added = {2017-12-07 02:27:04 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Eprint = {1611.08050},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:43:08 +0200},
	Title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},
	Url = {http://arxiv.org/abs/1611.08050},
	Volume = {abs/1611.08050},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2FvMjAxNmFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KQ2FvMjAxNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6Q2FvMjAxNmFhMAAADgAWAAoAQwBhAG8AMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0NhbzIwMTZhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://arxiv.org/abs/1611.08050}}

@article{Wei:2016aa,
	Archiveprefix = {arXiv},
	Author = {Shih{-}En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.org/rec/bib/journals/corr/WeiRKS16},
	Date-Added = {2017-12-07 02:25:59 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Eprint = {1602.00134},
	Journal = {CoRR},
	Timestamp = {Wed, 07 Jun 2017 14:41:18 +0200},
	Title = {Convolutional Pose Machines},
	Url = {http://arxiv.org/abs/1602.00134},
	Volume = {abs/1602.00134},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2VpMjAxNmFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KV2VpMjAxNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6V2VpMjAxNmFhMAAADgAWAAoAVwBlAGkAMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1dlaTIwMTZhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://arxiv.org/abs/1602.00134}}

@inproceedings{Mike-Papadakis:2012aa,
	Author = {Mike Papadakis, Yves Le Traon},
	Booktitle = {2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
	Date-Added = {2017-11-20 06:09:21 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Keywords = {Mutation Testing, Fault Localization},
	Pages = {691-700},
	Title = {Using Mutants to Locate ``Unknown'' Faults},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QTS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWlrZS1QYXBhZGFraXMyMDEyYWEw0hcLGBlXTlMuZGF0YU8RAZwAAAAAAZwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xVNaWtlLVBhcGFkYWtpczIwMTJhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIATC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpNaWtlLVBhcGFkYWtpczIwMTJhYTAADgAsABUATQBpAGsAZQAtAFAAYQBwAGEAZABhAGsAaQBzADIAMAAxADIAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBKVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9NaWtlLVBhcGFkYWtpczIwMTJhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDeAOMA6wKLAo0CkgKdAqYCtAK4Ar8CyALNAtoC3QLvAvIC9wAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAL5}}

@inproceedings{Cody-Kenny:2017aa,
	Acmid = {3071196},
	Address = {New York, NY, USA},
	Author = {Cody-Kenny, Brendan and Fenton, Michael and Ronayne, Adrian and Considine, Eoghan and McGuire, Thomas and O'Neill, Michael},
	Booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},
	Date-Added = {2017-11-17 02:18:28 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/3071178.3071196},
	Isbn = {978-1-4503-4920-8},
	Keywords = {genetic programming, performance, regular expressions},
	Location = {Berlin, Germany},
	Numpages = {8},
	Pages = {1280--1287},
	Publisher = {ACM},
	Series = {GECCO '17},
	Title = {A Search for Improved Performance in Regular Expressions},
	Url = {http://doi.acm.org/10.1145/3071178.3071196},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ29keS1LZW5ueTIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EUNvZHktS2VubnkyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkNvZHktS2VubnkyMDE3YWEwAA4AJAARAEMAbwBkAHkALQBLAGUAbgBuAHkAMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0NvZHktS2VubnkyMDE3YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3071178.3071196},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3071178.3071196}}

@inproceedings{Xu:2017aa,
	Acmid = {3071184},
	Address = {New York, NY, USA},
	Author = {Xu, Xiong and Zhu, Ziming and Jiao, Li},
	Booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},
	Date-Added = {2017-11-17 00:38:35 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1145/3071178.3071184},
	Isbn = {978-1-4503-4920-8},
	Keywords = {adaptivity, branch hardness, fitness functions, search based software testing, test data generation},
	Location = {Berlin, Germany},
	Numpages = {8},
	Pages = {1335--1342},
	Publisher = {ACM},
	Series = {GECCO '17},
	Title = {An Adaptive Fitness Function Based on Branch Hardness for Search Based Testing},
	Url = {http://doi.acm.org/10.1145/3071178.3071184},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWHUyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAWwAAAAAAWwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wlYdTIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpYdTIwMTdhYTAADgAUAAkAWAB1ADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgA+VXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9YdTIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDSANcA3wJPAlECVgJhAmoCeAJ8AoMCjAKRAp4CoQKzArYCuwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAK9},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3071178.3071184},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3071178.3071184}}

@article{Praditwong:2011aa,
	Abstract = {Software module clustering is the problem of automatically organizing software units into modules to improve program structure. There has been a great deal of recent interest in search-based formulations of this problem in which module boundaries are identified by automated search, guided by a fitness function that captures the twin objectives of high cohesion and low coupling in a single-objective fitness function. This paper introduces two novel multi-objective formulations of the software module clustering problem, in which several different objectives (including cohesion and coupling) are represented separately. In order to evaluate the effectiveness of the multi-objective approach, a set of experiments was performed on 17 real-world module clustering problems. The results of this empirical study provide strong evidence to support the claim that the multi-objective approach produces significantly better solutions than the existing single-objective approach.},
	Author = {K. Praditwong and M. Harman and X. Yao},
	Date-Added = {2017-11-14 03:57:26 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/TSE.2010.26},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {optimisation;pattern clustering;search problems;software engineering;multi-objective search problem;program structure;software module clustering;SBSE;evolutionary computation.;module clustering;multi-objective optimization},
	Month = {March},
	Number = {2},
	Pages = {264-282},
	Title = {Software Module Clustering as a Multi-Objective Search Problem},
	Volume = {37},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUHJhZGl0d29uZzIwMTFhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EVByYWRpdHdvbmcyMDExYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlByYWRpdHdvbmcyMDExYWEwAA4AJAARAFAAcgBhAGQAaQB0AHcAbwBuAGcAMgAwADEAMQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1ByYWRpdHdvbmcyMDExYWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2010.26}}

@inproceedings{Song:2017aa,
	Acmid = {3155570},
	Address = {Piscataway, NJ, USA},
	Author = {Song, Wei and Qian, Xiangxing and Huang, Jeff},
	Booktitle = {Proceedings of the 32Nd IEEE/ACM International Conference on Automated Software Engineering},
	Date-Added = {2017-11-10 02:15:46 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Isbn = {978-1-5386-2684-9},
	Keywords = {Android, automated testing, event generation, event handlers},
	Location = {Urbana-Champaign, IL, USA},
	Numpages = {11},
	Pages = {27--37},
	Publisher = {IEEE Press},
	Series = {ASE 2017},
	Title = {EHBDroid: Beyond GUI Testing for Android Applications},
	Url = {http://dl.acm.org/citation.cfm?id=3155562.3155570},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU29uZzIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C1NvbmcyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlNvbmcyMDE3YWEwAA4AGAALAFMAbwBuAGcAMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1NvbmcyMDE3YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=3155562.3155570}}

@article{Maamar:2017aa,
	Abstract = {We introduce in this paper an itemset mining approach to tackle the fault localization problem, which is one of the most difficult processes in software debugging. We formalize the problem of fault localization as finding the k best patterns satisfying a set of constraints modelling the most suspicious statements. We use a Constraint Programming (CP) approach to model and to solve our itemset based fault localization problem. Our approach consists of two steps: (i) mining top-k suspicious suites of statements; (ii) fault localization by processing top-k patterns. Experiments performed on standard benchmark programs show that our approach enables to propose a more precise localization than a standard approach.},
	Author = {Maamar, Mehdi and Lazaar, Nadjib and Loudni, Samir and Lebbah, Yahia},
	Date-Added = {2017-11-10 01:31:40 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Day = {01},
	Doi = {10.1007/s10515-015-0189-z},
	Issn = {1573-7535},
	Journal = {Automated Software Engineering},
	Month = {Jun},
	Number = {2},
	Pages = {341--368},
	Title = {Fault localization using itemset mining under constraints},
	Url = {https://doi.org/10.1007/s10515-015-0189-z},
	Volume = {24},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWFhbWFyMjAxN2FhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NTWFhbWFyMjAxN2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TWFhbWFyMjAxN2FhMAAOABwADQBNAGEAYQBtAGEAcgAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWFhbWFyMjAxN2FhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {https://doi.org/10.1007/s10515-015-0189-z},
	Bdsk-Url-2 = {http://dx.doi.org/10.1007/s10515-015-0189-z}}

@inproceedings{Mechtaev:2016aa,
	Abstract = {Since debugging is a time-consuming activity, automated program repair tools such as GenProg have garnered interest. A recent study revealed that the majority of GenProg repairs avoid bugs simply by deleting functionality. We found that SPR, a state-of-the-art repair tool proposed in 2015, still deletes functionality in their many "plausible" repairs. Unlike generate-and-validate systems such as GenProg and SPR, semantic analysis based repair techniques synthesize a repair based on semantic information of the program. While such semantics-based repair methods show promise in terms of quality of generated repairs, their scalability has been a concern so far. In this paper, we present Angelix, a novel semantics-based repair method that scales up to programs of similar size as are handled by search-based repair tools such as GenProg and SPR. This shows that Angelix is more scalable than previously proposed semantics based repair methods such as SemFix and DirectFix. Furthermore, our repair method can repair multiple buggy locations that are dependent on each other. Such repairs are hard to achieve using SPR and GenProg. In our experiments, Angelix generated repairs from large-scale real-world software such as wireshark and php, and these generated repairs include multi-location repairs. We also report our experience in automatically repairing the well-known Heartbleed vulnerability.},
	Author = {S. Mechtaev and J. Yi and A. Roychoudhury},
	Booktitle = {2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)},
	Date-Added = {2017-11-08 04:28:56 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2884781.2884807},
	Keywords = {program debugging;program diagnostics;Angelix method;Heartbleed vulnerability;SPR tool;generate-and-validate systems;multilocation repairs;program debugging;program repair tools;scalable multiline program patch synthesis;semantic analysis;semantic information;symbolic analysis;Computer bugs;Maintenance engineering;Scalability;Semantics;Software;Software engineering;Testing;Automated program repair;Semantic analysis},
	Month = {May},
	Pages = {691-701},
	Title = {Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWVjaHRhZXYyMDE2YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9NZWNodGFldjIwMTZhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpNZWNodGFldjIwMTZhYTAADgAgAA8ATQBlAGMAaAB0AGEAZQB2ADIAMAAxADYAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9NZWNodGFldjIwMTZhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2884781.2884807}}

@inproceedings{Misherghi:2006aa,
	Acmid = {1134307},
	Address = {New York, NY, USA},
	Author = {Misherghi, Ghassan and Su, Zhendong},
	Booktitle = {Proceedings of the 28th International Conference on Software Engineering},
	Date-Added = {2017-11-01 01:10:07 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/1134285.1134307},
	Isbn = {1-59593-375-1},
	Keywords = {Delta Debugging, Hierarchical Delta Debugging (HDD)},
	Location = {Shanghai, China},
	Numpages = {10},
	Pages = {142--151},
	Publisher = {ACM},
	Series = {ICSE '06},
	Title = {HDD: Hierarchical Delta Debugging},
	Url = {http://doi.acm.org/10.1145/1134285.1134307},
	Year = {2006},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWlzaGVyZ2hpMjAwNmFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QTWlzaGVyZ2hpMjAwNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TWlzaGVyZ2hpMjAwNmFhMAAADgAiABAATQBpAHMAaABlAHIAZwBoAGkAMgAwADAANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL01pc2hlcmdoaTIwMDZhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1134285.1134307},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1134285.1134307}}

@article{Zeller:2002aa,
	Acmid = {506206},
	Address = {Piscataway, NJ, USA},
	Author = {Zeller, Andreas and Hildebrandt, Ralf},
	Date-Added = {2017-10-30 04:52:16 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1109/32.988498},
	Issn = {0098-5589},
	Issue_Date = {February 2002},
	Journal = {IEEE Trans. Softw. Eng.},
	Keywords = {Delta Debugging},
	Month = feb,
	Number = {2},
	Numpages = {18},
	Pages = {183--200},
	Publisher = {IEEE Press},
	Title = {Simplifying and Isolating Failure-Inducing Input},
	Url = {http://dx.doi.org/10.1109/32.988498},
	Volume = {28},
	Year = {2002},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmVsbGVyMjAwMmFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NWmVsbGVyMjAwMmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WmVsbGVyMjAwMmFhMAAOABwADQBaAGUAbABsAGUAcgAyADAAMAAyAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmVsbGVyMjAwMmFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/32.988498}}

@inproceedings{Arcuri:2017aa,
	Abstract = {Nowadays, web services play a major role in the development of enterprise applications. Many such applications are now developed using a service-oriented architecture (SOA), where microservices is one of its most popular kind. A RESTful web service will provide data via an API over the network using HTTP, possibly interacting with databases and other web services. Testing a RESTful API poses challenges, as inputs/outputs are sequences of HTTP requests/responses to a remote server. Many approaches in the literature do black-box testing, as the tested API is a remote service whose code is not available. In this paper, we consider testing from the point of view of the developers, which do have full access to the code that they are writing. Therefore, we propose a fully automated white-box testing approach, where test cases are automatically generated using an evolutionary algorithm. Tests are rewarded based on code coverage and fault finding metrics. We implemented our technique in a tool called EVOMASTER, which is open-source. Experiments on two open-source, yet non-trivial RESTful services and an industrial one, do show that our novel technique did automatically find 38 real bugs in those applications. However, obtained code coverage is lower than the one achieved by the manually written test suites already existing in those services. Research directions on how to further improve such approach are therefore discussed.},
	Author = {A. Arcuri},
	Booktitle = {2017 IEEE International Conference on Software Quality, Reliability and Security (QRS)},
	Date-Added = {2017-09-29 02:34:47 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1109/QRS.2017.11},
	Keywords = {REST; SBSE; SBST; Service-Oriented Architecture (SOA); Web Service;},
	Month = {July},
	Pages = {9-20},
	Title = {RESTful API Automated Test Case Generation},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQXJjdXJpMjAxN2FhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NQXJjdXJpMjAxN2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6QXJjdXJpMjAxN2FhMAAOABwADQBBAHIAYwB1AHIAaQAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQXJjdXJpMjAxN2FhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/QRS.2017.11}}

@inproceedings{Jabbarvand:2017aa,
	Acmid = {3106244},
	Address = {New York, NY, USA},
	Author = {Jabbarvand, Reyhaneh and Malek, Sam},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-29 01:25:42 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/3106237.3106244},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Android, Energy Testing, Mutation Testing, Software Testing, f-droid},
	Location = {Paderborn, Germany},
	Numpages = {12},
	Pages = {208--219},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {{\$\mu\$}Droid: An Energy-aware Mutation Testing Framework for Android},
	Url = {http://doi.acm.org/10.1145/3106237.3106244},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSmFiYmFydmFuZDIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EUphYmJhcnZhbmQyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkphYmJhcnZhbmQyMDE3YWEwAA4AJAARAEoAYQBiAGIAYQByAHYAYQBuAGQAMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0phYmJhcnZhbmQyMDE3YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106244},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106244}}

@inproceedings{Long:2017aa,
	Author = {Long, Fan and Amidon, Peter and Rinard, Martin},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering, ESEC/FSE},
	Date-Added = {2017-09-22 02:23:18 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Keywords = {Automated Program Repair; Automated Patch Generation},
	Title = {Automatic inference of code transforms for patch generation},
	Volume = {2017},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTG9uZzIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0xvbmcyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkxvbmcyMDE3YWEwAA4AGAALAEwAbwBuAGcAMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0xvbmcyMDE3YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==}}

@article{Jia:2011aa,
	Abstract = {Mutation Testing is a fault-based software testing technique that has been widely studied for over three decades. The literature on Mutation Testing has contributed a set of approaches, tools, developments, and empirical results. This paper provides a comprehensive analysis and survey of Mutation Testing. The paper also presents the results of several development trend analyses. These analyses provide evidence that Mutation Testing techniques and tools are reaching a state of maturity and applicability, while the topic of Mutation Testing itself is the subject of increasing interest.},
	Author = {Y. Jia and M. Harman},
	Date-Added = {2017-09-14 10:51:56 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/TSE.2010.62},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Mutation Testing; Survey},
	Month = {Sept},
	Number = {5},
	Pages = {649-678},
	Title = {An Analysis and Survey of the Development of Mutation Testing},
	Volume = {37},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSmlhMjAxMWFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KSmlhMjAxMWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6SmlhMjAxMWFhMAAADgAWAAoASgBpAGEAMgAwADEAMQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0ppYTIwMTFhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2010.62}}

@inproceedings{Tian:2017aa,
	Acmid = {3106300},
	Address = {New York, NY, USA},
	Author = {Tian, Yuchi and Ray, Baishakhi},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:43:14 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/3106237.3106300},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Error Handling Bug; Automated Program Repair; Bug Detection},
	Location = {Paderborn, Germany},
	Numpages = {11},
	Pages = {752--762},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {Automatically Diagnosing and Repairing Error Handling Bugs in C},
	Url = {http://doi.acm.org/10.1145/3106237.3106300},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvVGlhbjIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C1RpYW4yMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlRpYW4yMDE3YWEwAA4AGAALAFQAaQBhAG4AMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1RpYW4yMDE3YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106300},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106300}}

@article{Martinez:2017aa,
	Abstract = {Defects4J is a large, peer-reviewed, structured dataset of real-world Java bugs. Each bug in Defects4J comes with a test suite and at least one failing test case that triggers the bug. In this paper, we report on an experiment to explore the effectiveness of automatic test-suite based repair on Defects4J. The result of our experiment shows that the considered state-of-the-art repair methods can generate patches for 47 out of 224 bugs. However, those patches are only test-suite adequate, which means that they pass the test suite and may potentially be incorrect beyond the test-suite satisfaction correctness criterion. We have manually analyzed 84 different patches to assess their real correctness. In total, 9 real Java bugs can be correctly repaired with test-suite based repair. This analysis shows that test-suite based repair suffers from under-specified bugs, for which trivial or incorrect patches still pass the test suite. With respect to practical applicability, it takes on average 14.8 minutes to find a patch. The experiment was done on a scientific grid, totaling 17.6 days of computation time. All the repair systems and experimental results are publicly available on Github in order to facilitate future research on automatic repair.},
	Author = {Martinez, Matias and Durieux, Thomas and Sommerard, Romain and Xuan, Jifeng and Monperrus, Martin},
	Date-Added = {2017-09-14 04:42:01 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Day = {01},
	Doi = {10.1007/s10664-016-9470-4},
	Issn = {1573-7616},
	Journal = {Empirical Software Engineering},
	Keywords = {Automated Program Repair},
	Month = {Aug},
	Number = {4},
	Pages = {1936--1964},
	Title = {Automatic repair of real bugs in java: a large-scale experiment on the defects4j dataset},
	Url = {https://doi.org/10.1007/s10664-016-9470-4},
	Volume = {22},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWFydGluZXoyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9NYXJ0aW5lejIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpNYXJ0aW5lejIwMTdhYTAADgAgAA8ATQBhAHIAdABpAG4AZQB6ADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9NYXJ0aW5lejIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {https://doi.org/10.1007/s10664-016-9470-4},
	Bdsk-Url-2 = {http://dx.doi.org/10.1007/s10664-016-9470-4}}

@inproceedings{Yi:2017aa,
	Acmid = {3106262},
	Address = {New York, NY, USA},
	Author = {Yi, Jooyong and Ahmed, Umair Z. and Karkare, Amey and Tan, Shin Hwei and Roychoudhury, Abhik},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:40:22 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1145/3106237.3106262},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Automated Program Repair, Intelligent Tutoring System},
	Location = {Paderborn, Germany},
	Numpages = {12},
	Pages = {740--751},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {A Feasibility Study of Using Automated Program Repair for Introductory Programming Assignments},
	Url = {http://doi.acm.org/10.1145/3106237.3106262},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWWkyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAWwAAAAAAWwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wlZaTIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpZaTIwMTdhYTAADgAUAAkAWQBpADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgA+VXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9ZaTIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDSANcA3wJPAlECVgJhAmoCeAJ8AoMCjAKRAp4CoQKzArYCuwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAK9},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106262},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106262}}

@inproceedings{Castelluccio:2017aa,
	Acmid = {3106306},
	Address = {New York, NY, USA},
	Author = {Castelluccio, Marco and Sansone, Carlo and Verdoliva, Luisa and Poggi, Giovanni},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:33:43 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/3106237.3106306},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Crash Analysis, Crash Reports, Crashes},
	Location = {Paderborn, Germany},
	Numpages = {10},
	Pages = {717--726},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {Automatically Analyzing Groups of Crashes for Finding Correlations},
	Url = {http://doi.acm.org/10.1145/3106237.3106306},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2FzdGVsbHVjY2lvMjAxN2FhMNIXCxgZV05TLmRhdGFPEQGUAAAAAAGUAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8TQ2FzdGVsbHVjY2lvMjAxN2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEovOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6Q2FzdGVsbHVjY2lvMjAxN2FhMAAOACgAEwBDAGEAcwB0AGUAbABsAHUAYwBjAGkAbwAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIASFVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2FzdGVsbHVjY2lvMjAxN2FhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANwA4QDpAoECgwKIApMCnAKqAq4CtQK+AsMC0ALTAuUC6ALtAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAu8=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106306},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106306}}

@inproceedings{Bianchi:2017aa,
	Acmid = {3106292},
	Address = {New York, NY, USA},
	Author = {Bianchi, Francesco A. and Pezz\`{e}, Mauro and Terragni, Valerio},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:32:35 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/3106237.3106292},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Concurrent Program, Debugging, Software Crashes, Test Generation},
	Location = {Paderborn, Germany},
	Numpages = {12},
	Pages = {705--716},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {Reproducing Concurrency Failures from Crash Stacks},
	Url = {http://doi.acm.org/10.1145/3106237.3106292},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmlhbmNoaTIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkJpYW5jaGkyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJpYW5jaGkyMDE3YWEwAAAOAB4ADgBCAGkAYQBuAGMAaABpADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9CaWFuY2hpMjAxN2FhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106292},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106292}}

@inproceedings{Yu:2017aa,
	Acmid = {3106266},
	Address = {New York, NY, USA},
	Author = {Yu, Tingting and Zaman, Tarannum S. and Wang, Chao},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:31:51 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1145/3106237.3106266},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Concurrency Failures, Debugging, Failure Reproduction, Multi-Process Applications},
	Location = {Paderborn, Germany},
	Numpages = {11},
	Pages = {694--704},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {DESCRY: Reproducing System-level Concurrency Failures},
	Url = {http://doi.acm.org/10.1145/3106237.3106266},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWXUyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAWwAAAAAAWwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wlZdTIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpZdTIwMTdhYTAADgAUAAkAWQB1ADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgA+VXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9ZdTIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDSANcA3wJPAlECVgJhAmoCeAJ8AoMCjAKRAp4CoQKzArYCuwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAK9},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106266},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106266}}

@article{Betts:2017aa,
	Abstract = {The discovery of inductive invariants lies at the heart of static program verification. This paper describes our efforts to apply candidate-based invariant generation in GPUVerify, a static checker of programs that run on GPUs. We study a large set of GPU programs that contain loops, drawn from a number of open source suites and vendor SDKs. We describe the methodology we used to incrementally improve the invariant generation capabilities of GPUVerify to handle these benchmarks, through candidate-based invariant generation, whereby potential program invariants are speculated using cheap static analysis and subsequently either refuted or proven. We also describe a set of experiments that we used to examine the effectiveness of our rules for candidate generation. We believe that our methodology for devising and evaluation candidate generation rules may serve as a useful framework for other researchers. To speed up invariant generation, we have investigated four under-approximating program analyses that aim to reject false candidates quickly and a framework whereby these analyses can run in sequence or in parallel. We describe experimental results showing speedups across two experimental platforms.},
	Author = {A. Betts and N. Chong and A. Donaldson and P. Deligiannis and J. Ketema},
	Date-Added = {2017-09-14 04:29:56 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1109/TSE.2017.2718516},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Program Invariant; GPUs; Invariant Generation},
	Number = {99},
	Pages = {1-1},
	Title = {Implementing and Evaluating Candidate-Based Invariant Generation},
	Volume = {PP},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmV0dHMyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxCZXR0czIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpCZXR0czIwMTdhYTAAAA4AGgAMAEIAZQB0AHQAcwAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmV0dHMyMDE3YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2017.2718516}}

@inproceedings{Gold:2017ab,
	Acmid = {3106304},
	Address = {New York, NY, USA},
	Author = {Gold, Nicolas E. and Binkley, David and Harman, Mark and Islam, Syed and Krinke, Jens and Yoo, Shin},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:28:32 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/3106237.3106304},
	Isbn = {978-1-4503-5105-8},
	Keywords = {MATLAB, ORBS, Observational Slicing, Simulink, Program Slicing},
	Location = {Paderborn, Germany},
	Numpages = {12},
	Pages = {547--558},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {Generalized Observational Slicing for Tree-represented Modelling Languages},
	Url = {http://doi.acm.org/10.1145/3106237.3106304},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR29sZDIwMTdhYjDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0dvbGQyMDE3YWIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkdvbGQyMDE3YWIwAA4AGAALAEcAbwBsAGQAMgAwADEANwBhAGIAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0dvbGQyMDE3YWIwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106304},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106304}}

@inproceedings{Brennan:2017aa,
	Acmid = {3106303},
	Address = {New York, NY, USA},
	Author = {Brennan, Tegan and Tsiskaridze, Nestan and Rosner, Nicol\'{a}s and Aydin, Abdulbaki and Bultan, Tevfik},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:27:58 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/3106237.3106303},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Constraint Caching, Model Counting, Program Analysis, Quantitative Program Analysis, String Constraints},
	Location = {Paderborn, Germany},
	Numpages = {12},
	Pages = {535--546},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {Constraint Normalization and Parameterized Caching for Quantitative Program Analysis},
	Url = {http://doi.acm.org/10.1145/3106237.3106303},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQnJlbm5hbjIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkJyZW5uYW4yMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJyZW5uYW4yMDE3YWEwAAAOAB4ADgBCAHIAZQBuAG4AYQBuADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9CcmVubmFuMjAxN2FhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106303},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106303}}

@inproceedings{Wang:2017aa,
	Acmid = {3106258},
	Address = {New York, NY, USA},
	Author = {Wang, Song and Nam, Jaechang and Tan, Lin},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:18:29 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1145/3106237.3106258},
	Isbn = {978-1-4503-5105-8},
	Keywords = {QTEP; Test Case Prioritization},
	Location = {Paderborn, Germany},
	Numpages = {12},
	Pages = {523--534},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {QTEP: Quality-aware Test Case Prioritization},
	Url = {http://doi.acm.org/10.1145/3106237.3106258},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2FuZzIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C1dhbmcyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOldhbmcyMDE3YWEwAA4AGAALAFcAYQBuAGcAMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1dhbmcyMDE3YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106258},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106258}}

@inproceedings{Brown:2017aa,
	Acmid = {3106280},
	Address = {New York, NY, USA},
	Author = {Brown, David Bingham and Vaughn, Michael and Liblit, Ben and Reps, Thomas},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:17:44 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/3106237.3106280},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Mutation Testing; Wild Mutant; Repository Mining},
	Location = {Paderborn, Germany},
	Numpages = {12},
	Pages = {511--522},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {The Care and Feeding of Wild-caught Mutants},
	Url = {http://doi.acm.org/10.1145/3106237.3106280},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQnJvd24yMDE3YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxCcm93bjIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpCcm93bjIwMTdhYTAAAA4AGgAMAEIAcgBvAHcAbgAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQnJvd24yMDE3YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106280},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106280}}

@inproceedings{Galhotra:2017aa,
	Acmid = {3106277},
	Address = {New York, NY, USA},
	Author = {Galhotra, Sainyam and Brun, Yuriy and Meliou, Alexandra},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:16:30 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/3106237.3106277},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Software Testing; Discrimination Testing; Fairness Testing},
	Location = {Paderborn, Germany},
	Numpages = {13},
	Pages = {498--510},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {Fairness Testing: Testing Software for Discrimination},
	Url = {http://doi.acm.org/10.1145/3106237.3106277},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR2FsaG90cmEyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9HYWxob3RyYTIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpHYWxob3RyYTIwMTdhYTAADgAgAA8ARwBhAGwAaABvAHQAcgBhADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9HYWxob3RyYTIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106277},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106277}}

@inproceedings{Dietsch:2017aa,
	Acmid = {3106307},
	Address = {New York, NY, USA},
	Author = {Dietsch, Daniel and Heizmann, Matthias and Musa, Betim and Nutz, Alexander and Podelski, Andreas},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:14:52 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/3106237.3106307},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Formal Verification, Craig Interpolation, Unsatisfiable Cores},
	Location = {Paderborn, Germany},
	Numpages = {11},
	Pages = {487--497},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {Craig vs. Newton in Software Model Checking},
	Url = {http://doi.acm.org/10.1145/3106237.3106307},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRGlldHNjaDIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkRpZXRzY2gyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkRpZXRzY2gyMDE3YWEwAAAOAB4ADgBEAGkAZQB0AHMAYwBoADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9EaWV0c2NoMjAxN2FhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3106237.3106307},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3106237.3106307}}

@article{Bezemer:2017aa,
	Abstract = {Software developers rely on a build system to compile their source code changes and produce deliverables for testing and deployment. Since the full build of large software systems can take hours, the incremental build is a cornerstone of modern build systems. Incremental builds should only recompile deliverables whose dependencies have been changed by a developer. However, in many organizations, such dependencies still are identified by build rules that are specified and maintained (mostly) manually, typically using technologies like make. Incomplete rules lead to unspecified dependencies that can prevent certain deliverables from being rebuilt, yielding incomplete results, which leave sources and deliverables out-of-sync. In this paper, we present a case study on unspecified dependencies in the make-based build systems of the glib, openldap, linux and qt open source projects. To uncover unspecified dependencies in make-based build systems, we use an approach that combines a conceptual model of the dependencies specified in the build system with a concrete model of the files and processes that are actually exercised during the build. Our approach provides an overview of the dependencies that are used throughout the build system and reveals unspecified dependencies that are not yet expressed in the build system rules. During our analysis, we find that unspecified dependencies are common. We identify 6 common causes in more than 1.2 million unspecified dependencies.},
	Author = {Bezemer, Cor-Paul and McIntosh, Shane and Adams, Bram and German, Daniel M. and Hassan, Ahmed E.},
	Date-Added = {2017-09-14 04:13:02 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Day = {05},
	Doi = {10.1007/s10664-017-9510-8},
	Issn = {1573-7616},
	Journal = {Empirical Software Engineering},
	Keywords = {Build System; Unspecified Dependencies},
	Month = {Apr},
	Title = {An empirical study of unspecified dependencies in make-based build systems},
	Url = {https://doi.org/10.1007/s10664-017-9510-8},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmV6ZW1lcjIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkJlemVtZXIyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJlemVtZXIyMDE3YWEwAAAOAB4ADgBCAGUAegBlAG0AZQByADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9CZXplbWVyMjAxN2FhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {https://doi.org/10.1007/s10664-017-9510-8},
	Bdsk-Url-2 = {http://dx.doi.org/10.1007/s10664-017-9510-8}}

@inproceedings{Chaparro:2017aa,
	Author = {Chaparro, Oscar and Lu, Jing and Zampetti, Fiorella and Moreno, Laura and Di Penta, Massimiliano and Marcus, Andrian and Bavota, Gabriele and Ng, Vincent},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:12:14 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Keywords = {Bug Report; Bug Description Discourse; Automated Discourse Identification},
	Organization = {ACM},
	Pages = {396--407},
	Title = {Detecting missing information in bug descriptions},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2hhcGFycm8yMDE3YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9DaGFwYXJybzIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpDaGFwYXJybzIwMTdhYTAADgAgAA8AQwBoAGEAcABhAHIAcgBvADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9DaGFwYXJybzIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb}}

@article{Kuhrmann:2017aa,
	Abstract = {Systematic literature studies have received much attention in empirical software engineering in recent years. They have become a powerful tool to collect and structure reported knowledge in a systematic and reproducible way. We distinguish systematic literature reviews to systematically analyze reported evidence in depth, and systematic mapping studies to structure a field of interest in a broader, usually quantified manner. Due to the rapidly increasing body of knowledge in software engineering, researchers who want to capture the published work in a domain often face an extensive amount of publications, which need to be screened, rated for relevance, classified, and eventually analyzed. Although there are several guidelines to conduct literature studies, they do not yet help researchers coping with the specific difficulties encountered in the practical application of these guidelines. In this article, we present an experience-based guideline to aid researchers in designing systematic literature studies with special emphasis on the data collection and selection procedures. Our guideline aims at providing a blueprint for a practical and pragmatic path through the plethora of currently available practices and deliverables capturing the dependencies among the single steps. The guideline emerges from various mapping studies and literature reviews conducted by the authors and provides recommendations for the general study design, data collection, and study selection procedures. Finally, we share our experiences and lessons learned in applying the different practices of the proposed guideline.},
	Author = {Kuhrmann, Marco and Fern{\'a}ndez, Daniel M{\'e}ndez and Daneva, Maya},
	Date-Added = {2017-09-14 04:10:24 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Day = {06},
	Doi = {10.1007/s10664-016-9492-y},
	Issn = {1573-7616},
	Journal = {Empirical Software Engineering},
	Keywords = {Systematic Literature Review},
	Month = {Jan},
	Title = {On the pragmatic design of literature studies in software engineering: an experience-based guideline},
	Url = {https://doi.org/10.1007/s10664-016-9492-y},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvS3Vocm1hbm4yMDE3YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9LdWhybWFubjIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpLdWhybWFubjIwMTdhYTAADgAgAA8ASwB1AGgAcgBtAGEAbgBuADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9LdWhybWFubjIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb}}

@inproceedings{Abdalkareem:2017aa,
	Acmid = {3106267},
	Address = {New York, NY, USA},
	Author = {Abdalkareem, Rabe and Nourry, Olivier and Wehaibi, Sultan and Mujahid, Suhaib and Shihab, Emad},
	Booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-09-14 04:08:04 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/3106237.3106267},
	Isbn = {978-1-4503-5105-8},
	Keywords = {Code Reuse, Empirical Studies, JavaScript, Node.js},
	Location = {Paderborn, Germany},
	Numpages = {11},
	Pages = {385--395},
	Publisher = {ACM},
	Series = {ESEC/FSE 2017},
	Title = {Why Do Developers Use Trivial Packages? An Empirical Case Study on Npm},
	Url = {http://doi.acm.org/10.1145/3106237.3106267},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQWJkYWxrYXJlZW0yMDE3YWEw0hcLGBlXTlMuZGF0YU8RAZIAAAAAAZIAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xJBYmRhbGthcmVlbTIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIASS86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpBYmRhbGthcmVlbTIwMTdhYTAAAA4AJgASAEEAYgBkAGEAbABrAGEAcgBlAGUAbQAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAR1VzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQWJkYWxrYXJlZW0yMDE3YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANsA4ADoAn4CgAKFApACmQKnAqsCsgK7AsACzQLQAuIC5QLqAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAuw=}}

@inproceedings{Weiser:1981aa,
	Author = {Weiser, Mark},
	Booktitle = {Proceedings of the 5th international conference on Software engineering},
	Date-Added = {2017-09-10 15:31:41 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Keywords = {Program Slicing},
	Organization = {IEEE Press},
	Pages = {439--449},
	Title = {Program slicing},
	Year = {1981},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2Vpc2VyMTk4MWFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NV2Vpc2VyMTk4MWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6V2Vpc2VyMTk4MWFhMAAOABwADQBXAGUAaQBzAGUAcgAxADkAOAAxAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2Vpc2VyMTk4MWFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=}}

@inproceedings{Gold:2017aa,
	Author = {Gold, Nicolas and Binkley, David and Harman, Mark and Islam, Syed and Krinke, Jens and Yoo, Shin},
	Booktitle = {Proceedings of the 11th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
	Date-Added = {2017-09-04 05:54:06 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Keywords = {ORBS},
	Series = {ESEC/FSE 2017},
	Title = {Generalized Observational Slicing for Tree-Represented Modelling Languages},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR29sZDIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0dvbGQyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkdvbGQyMDE3YWEwAA4AGAALAEcAbwBsAGQAMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0dvbGQyMDE3YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==}}

@inproceedings{Goues:2012ab,
	Abstract = {There are more bugs in real-world programs than human programmers can realistically address. This paper evaluates two research questions: ``What fraction of bugs can be repaired automatically?'' and ``How much does it cost to repair a bug automatically?'' In previous work, we presented GenProg, which uses genetic programming to repair defects in off-the-shelf C programs. To answer these questions, we: (1) propose novel algorithmic improvements to GenProg that allow it to scale to large programs and find repairs 68% more often, (2) exploit GenProg's inherent parallelism using cloud computing resources to provide grounded, human-competitive cost measurements, and (3) generate a large, indicative benchmark set to use for systematic evaluations. We evaluate GenProg on 105 defects from 8 open-source programs totaling 5.1 million lines of code and involving 10,193 test cases. GenProg automatically repairs 55 of those 105 defects. To our knowledge, this evaluation is the largest available of its kind, and is often two orders of magnitude larger than previous work in terms of code or test suite size or defect count. Public cloud computing prices allow our 105 runs to be reproduced for $403; a successful repair completes in 96 minutes and costs $7.32, on average.},
	Author = {C. Le Goues and M. Dewey-Vogt and S. Forrest and W. Weimer},
	Booktitle = {2012 34th International Conference on Software Engineering (ICSE)},
	Date-Added = {2017-08-28 08:38:20 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/ICSE.2012.6227211},
	Issn = {0270-5257},
	Keywords = {Genetic Algorithm (GA), GenProg, Automated Program Repair},
	Month = {June},
	Pages = {3-13},
	Title = {A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR291ZXMyMDEyYWIw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxHb3VlczIwMTJhYjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpHb3VlczIwMTJhYjAAAA4AGgAMAEcAbwB1AGUAcwAyADAAMQAyAGEAYgAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR291ZXMyMDEyYWIwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSE.2012.6227211}}

@article{Goues:2012aa,
	Abstract = {This paper describes GenProg, an automated method for repairing defects in off-the-shelf, legacy programs without formal specifications, program annotations, or special coding practices. GenProg uses an extended form of genetic programming to evolve a program variant that retains required functionality but is not susceptible to a given defect, using existing test suites to encode both the defect and required functionality. Structural differencing algorithms and delta debugging reduce the difference between this variant and the original program to a minimal repair. We describe the algorithm and report experimental results of its success on 16 programs totaling 1.25 M lines of C code and 120K lines of module code, spanning eight classes of defects, in 357 seconds, on average. We analyze the generated repairs qualitatively and quantitatively to demonstrate that the process efficiently produces evolved programs that repair the defect, are not fragile input memorizations, and do not lead to serious degradation in functionality.},
	Author = {C. Le Goues and T. Nguyen and S. Forrest and W. Weimer},
	Date-Added = {2017-08-28 08:35:51 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/TSE.2011.104},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {GenProg, Genetic Algorithm (GA), Automated Program Repair},
	Month = {Jan},
	Number = {1},
	Pages = {54-72},
	Title = {GenProg: A Generic Method for Automatic Software Repair},
	Volume = {38},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR291ZXMyMDEyYWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxHb3VlczIwMTJhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpHb3VlczIwMTJhYTAAAA4AGgAMAEcAbwB1AGUAcwAyADAAMQAyAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR291ZXMyMDEyYWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2011.104}}

@inproceedings{Floyd:2017aa,
	Acmid = {3097390},
	Address = {Piscataway, NJ, USA},
	Author = {Floyd, Benjamin and Santander, Tyler and Weimer, Westley},
	Booktitle = {Proceedings of the 39th International Conference on Software Engineering},
	Date-Added = {2017-08-11 01:24:09 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/ICSE.2017.24},
	Isbn = {978-1-5386-3868-2},
	Keywords = {Code Comprehension; Medical Imaging; Prose Review},
	Location = {Buenos Aires, Argentina},
	Numpages = {12},
	Pages = {175--186},
	Publisher = {IEEE Press},
	Series = {ICSE '17},
	Title = {Decoding the Representation of Code in the Brain: An fMRI Study of Code Review and Expertise},
	Url = {https://doi.org/10.1109/ICSE.2017.24},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRmxveWQyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxGbG95ZDIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpGbG95ZDIwMTdhYTAAAA4AGgAMAEYAbABvAHkAZAAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRmxveWQyMDE3YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {https://doi.org/10.1109/ICSE.2017.24},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/ICSE.2017.24}}

@article{Moravcik:2017aa,
	Author = {Matej Moravc{\'{\i}}k and Martin Schmid and Neil Burch and Viliam Lis{\'{y}} and Dustin Morrill and Nolan Bard and Trevor Davis and Kevin Waugh and Michael Johanson and Michael H. Bowling},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.uni-trier.de/rec/bib/journals/corr/MoravcikSBLMBDW17},
	Date-Added = {2017-08-07 15:04:00 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Journal = {CoRR},
	Keywords = {DeepStack; Artificial Intelligence (AI)},
	Timestamp = {Wed, 07 Jun 2017 14:40:10 +0200},
	Title = {DeepStack: Expert-Level Artificial Intelligence in No-Limit Poker},
	Url = {http://arxiv.org/abs/1701.01724},
	Volume = {abs/1701.01724},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTW9yYXZjaWsyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9Nb3JhdmNpazIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpNb3JhdmNpazIwMTdhYTAADgAgAA8ATQBvAHIAYQB2AGMAaQBrADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9Nb3JhdmNpazIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {http://arxiv.org/abs/1701.01724}}

@article{Mnih:2013aa,
	Author = {Volodymyr Mnih and Koray Kavukcuoglu and David Silver and Alex Graves and Ioannis Antonoglou and Daan Wierstra and Martin A. Riedmiller},
	Bibsource = {dblp computer science bibliography, http://dblp.org},
	Biburl = {http://dblp.uni-trier.de/rec/bib/journals/corr/MnihKSGAWR13},
	Date-Added = {2017-08-07 14:59:30 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Journal = {CoRR},
	Keywords = {Reinforcement Learning; Atari},
	Timestamp = {Wed, 07 Jun 2017 14:43:06 +0200},
	Title = {Playing Atari with Deep Reinforcement Learning},
	Url = {http://arxiv.org/abs/1312.5602},
	Volume = {abs/1312.5602},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTW5paDIwMTNhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C01uaWgyMDEzYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOk1uaWgyMDEzYWEwAA4AGAALAE0AbgBpAGgAMgAwADEAMwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL01uaWgyMDEzYWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://arxiv.org/abs/1312.5602}}

@article{Graves:2016aa,
	Abstract = {Artificial neural networks are remarkably adept at sensory processing, sequence learning and reinforcement learning, but are limited in their ability to represent variables and data structures and to store data over long timescales, owing to the lack of an external memory. Here we introduce a machine learning model called a differentiable neural computer (DNC), which consists of a neural network that can read from and write to an external memory matrix, analogous to the random-access memory in a conventional computer. Like a conventional computer, it can use its memory to represent and manipulate complex data structures, but, like a neural network, it can learn to do so from data. When trained with supervised learning, we demonstrate that a DNC can successfully answer synthetic questions designed to emulate reasoning and inference problems in natural language. We show that it can learn tasks such as finding the shortest path between specified points and inferring the missing links in randomly generated graphs, and then generalize these tasks to specific graphs such as transport networks and family trees. When trained with reinforcement learning, a DNC can complete a moving blocks puzzle in which changing goals are specified by sequences of symbols. Taken together, our results demonstrate that DNCs have the capacity to solve complex, structured tasks that are inaccessible to neural networks without external read{\^a}€``write memory.},
	Author = {Graves, Alex and Wayne, Greg and Reynolds, Malcolm and Harley, Tim and Danihelka, Ivo and Grabska-Barwi{\AA}„ska, Agnieszka and Colmenarejo, Sergio G{\~A}³mez and Grefenstette, Edward and Ramalho, Tiago and Agapiou, John and Badia, Adri{\~A}Puigdom{\~A}¨nech and Hermann, Karl Moritz and Zwols, Yori and Ostrovski, Georg and Cain, Adam and King, Helen and Summerfield, Christopher and Blunsom, Phil and Kavukcuoglu, Koray and Hassabis, Demis},
	Date = {2016/10/27/print},
	Date-Added = {2017-08-07 14:57:27 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Day = {27},
	Isbn = {0028-0836},
	Journal = {Nature},
	Keywords = {Neural Network (NN); Differentiable Neural Computer (DNC)},
	L3 = {10.1038/nature20101; http://www.nature.com/nature/journal/v538/n7626/abs/nature20101.html#supplementary-information},
	M3 = {Article},
	Month = {10},
	Number = {7626},
	Pages = {471--476},
	Publisher = {Macmillan Publishers Limited, part of Springer Nature. All rights reserved.},
	Title = {Hybrid computing using a neural network with dynamic external memory},
	Ty = {JOUR},
	Url = {http://dx.doi.org/10.1038/nature20101},
	Volume = {538},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR3JhdmVzMjAxNmFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NR3JhdmVzMjAxNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6R3JhdmVzMjAxNmFhMAAOABwADQBHAHIAYQB2AGUAcwAyADAAMQA2AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR3JhdmVzMjAxNmFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1038/nature20101}}

@inproceedings{Zhang:2017aa,
	Acmid = {3092731},
	Address = {New York, NY, USA},
	Author = {Zhang, Mengshi and Li, Xia and Zhang, Lingming and Khurshid, Sarfraz},
	Booktitle = {Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis},
	Date-Added = {2017-08-04 02:04:38 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1145/3092703.3092731},
	Isbn = {978-1-4503-5076-1},
	Keywords = {PageRank, Spectrum-based Fault Localization (SBFL), Software Testing},
	Location = {Santa Barbara, CA, USA},
	Numpages = {12},
	Pages = {261--272},
	Publisher = {ACM},
	Series = {ISSTA 2017},
	Title = {Boosting Spectrum-based Fault Localization Using PageRank},
	Url = {http://doi.acm.org/10.1145/3092703.3092731},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmhhbmcyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxaaGFuZzIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpaaGFuZzIwMTdhYTAAAA4AGgAMAFoAaABhAG4AZwAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmhhbmcyMDE3YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/3092703.3092731},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/3092703.3092731}}

@inproceedings{Mairhofer:2011aa,
	Acmid = {2001826},
	Address = {New York, NY, USA},
	Author = {Mairhofer, Stefan and Feldt, Robert and Torkar, Richard},
	Booktitle = {Proceedings of the 13th Annual Conference on Genetic and Evolutionary Computation},
	Date-Added = {2017-07-28 01:16:24 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2001576.2001826},
	Isbn = {978-1-4503-0557-0},
	Keywords = {SBST; Dynamic Language},
	Location = {Dublin, Ireland},
	Numpages = {8},
	Pages = {1859--1866},
	Publisher = {ACM},
	Series = {GECCO '11},
	Title = {Search-based Software Testing and Test Data Generation for a Dynamic Programming Language},
	Url = {http://doi.acm.org/10.1145/2001576.2001826},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWFpcmhvZmVyMjAxMWFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QTWFpcmhvZmVyMjAxMWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TWFpcmhvZmVyMjAxMWFhMAAADgAiABAATQBhAGkAcgBoAG8AZgBlAHIAMgAwADEAMQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL01haXJob2ZlcjIwMTFhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2001576.2001826},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2001576.2001826}}

@article{Xu:2005aa,
	Acmid = {1050865},
	Address = {New York, NY, USA},
	Author = {Xu, Baowen and Qian, Ju and Zhang, Xiaofang and Wu, Zhongqiang and Chen, Lin},
	Date-Added = {2017-07-24 07:31:26 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1145/1050849.1050865},
	Issn = {0163-5948},
	Issue_Date = {March 2005},
	Journal = {SIGSOFT Softw. Eng. Notes},
	Keywords = {Program Slicing; Survey},
	Month = mar,
	Number = {2},
	Numpages = {36},
	Pages = {1--36},
	Publisher = {ACM},
	Title = {A Brief Survey of Program Slicing},
	Url = {http://doi.acm.org/10.1145/1050849.1050865},
	Volume = {30},
	Year = {2005},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWHUyMDA1YWEw0hcLGBlXTlMuZGF0YU8RAWwAAAAAAWwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wlYdTIwMDVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpYdTIwMDVhYTAADgAUAAkAWAB1ADIAMAAwADUAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgA+VXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9YdTIwMDVhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDSANcA3wJPAlECVgJhAmoCeAJ8AoMCjAKRAp4CoQKzArYCuwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAK9},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1050849.1050865},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1050849.1050865}}

@article{White:2017aa,
	Author = {David R. White},
	Date-Added = {2017-07-20 02:32:41 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Journal = {GECCO},
	Keywords = {Genetic Improvement (GI)},
	Title = {GI in No Time},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2hpdGUyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxXaGl0ZTIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpXaGl0ZTIwMTdhYTAAAA4AGgAMAFcAaABpAHQAZQAyADAAMQA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2hpdGUyMDE3YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=}}

@article{Korel:1990aa,
	Abstract = {An alternative approach to test-data generation based on actual execution of the program under test, function-minimization methods and dynamic data-flow analysis is presented. Test data are developed for the program using actual values of input variables. When the program is executed, the program execution flow is monitored. If during program execution an undesirable execution flow is observed then function-minimization search algorithms are used to automatically locate the values of input variables for which the selected path is traversed. In addition, dynamic data-flow analysis is used to determine those input variables responsible for the undesirable program behavior, significantly increasing the speed of the search process. The approach to generating test data is then extended to programs with dynamic data structures and a search method based on dynamic data-flow analysis and backtracking is presented. In the approach described, values of array indexes and pointers are known at each step of program execution; this information is used to overcome difficulties of array and pointer handling},
	Author = {B. Korel},
	Date-Added = {2017-07-07 02:03:24 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/32.57624},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Test Generation; Alternating Variable Method (AVM); Symbolic Execution; Software Testing},
	Month = {Aug},
	Number = {8},
	Pages = {870-879},
	Title = {Automated software test data generation},
	Volume = {16},
	Year = {1990},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvS29yZWwxOTkwYWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxLb3JlbDE5OTBhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpLb3JlbDE5OTBhYTAAAA4AGgAMAEsAbwByAGUAbAAxADkAOQAwAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvS29yZWwxOTkwYWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/32.57624}}

@inproceedings{Harman:2007ab,
	Acmid = {1273475},
	Address = {New York, NY, USA},
	Author = {Harman, Mark and McMinn, Phil},
	Booktitle = {Proceedings of the 2007 International Symposium on Software Testing and Analysis},
	Date-Added = {2017-07-07 02:00:12 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/1273463.1273475},
	Isbn = {978-1-59593-734-6},
	Keywords = {Genetic Algorithm (GA); Alternating Variable Method (AVM); SBST},
	Location = {London, United Kingdom},
	Numpages = {11},
	Pages = {73--83},
	Publisher = {ACM},
	Series = {ISSTA '07},
	Title = {A Theoretical \& Empirical Analysis of Evolutionary Testing and Hill Climbing for Structural Test Data Generation},
	Url = {http://doi.acm.org/10.1145/1273463.1273475},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAwN2FiMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NSGFybWFuMjAwN2FiMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6SGFybWFuMjAwN2FiMAAOABwADQBIAGEAcgBtAGEAbgAyADAAMAA3AGEAYgAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAwN2FiMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1273463.1273475},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1273463.1273475}}

@misc{Mahajan:2017aa,
	Author = {S. Mahajan and A. Alameer and P.S. McMinn and W.G.J. Halfond},
	Booktitle = {International Symposium on Software Testing and Analysis (ISSTA 2017)},
	Date-Added = {2017-07-07 01:09:46 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Journal = {International Symposium on Software Testing and Analysis (ISSTA 2017)},
	Keywords = {Automated Program Repair; Web Application; SBSE; Alternating Variable Method (AVM)},
	Month = {May},
	Note = {{\copyright} 2017 ACM.},
	Publisher = {ACM},
	Title = {XFix: An Automated Tool for the Repair of Layout Cross Browser Issues},
	Url = {http://eprints.whiterose.ac.uk/116992/},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWFoYWphbjIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////Dk1haGFqYW4yMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOk1haGFqYW4yMDE3YWEwAAAOAB4ADgBNAGEAaABhAGoAYQBuADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9NYWhhamFuMjAxN2FhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://eprints.whiterose.ac.uk/116992/}}

@article{Yoo:2012aa,
	Author = {Yoo, Shin and Harman, Mark},
	Date-Added = {2017-07-06 06:10:13 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Journal = {Software {T}esting, {V}erification, and {R}eliability},
	Keywords = {Survey;Test Suite Minimisation; Regression Testing;Test Case Prioritization},
	Month = mar,
	Number = {2},
	Pages = {67--120},
	Title = {Regression Testing Minimisation, Selection and Prioritisation: A Survey},
	Volume = {22},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWW9vMjAxMmFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KWW9vMjAxMmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WW9vMjAxMmFhMAAADgAWAAoAWQBvAG8AMgAwADEAMgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1lvbzIwMTJhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==}}

@article{Yoo:2012ab,
	Author = {Yoo, Shin and Harman, Mark},
	Date-Added = {2017-07-06 06:09:24 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Journal = {{Journal of Software Testing, Verification and Reliability}},
	Keywords = {Test Generation},
	Number = {3},
	Pages = {171-201},
	Title = {Test Data Regeneration: Generating New Test Data from Existing Test Data},
	Volume = {22},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWW9vMjAxMmFiMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KWW9vMjAxMmFiMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WW9vMjAxMmFiMAAADgAWAAoAWQBvAG8AMgAwADEAMgBhAGIAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1lvbzIwMTJhYjAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==}}

@article{Yoo:2013ab,
	Address = {New York, NY, USA},
	Author = {Yoo, Shin and Harman, Mark and Clark, David},
	Date-Added = {2017-07-06 06:07:56 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Issue_Date = {July 2013},
	Journal = {{ACM} {T}ransactions on {S}oftware {E}ngineering {M}ethodology},
	Keywords = {Fault Localization;Test Case Prioritization;Information Theory},
	Month = jul,
	Number = {3},
	Numpages = {29},
	Pages = {19:1--19:29},
	Publisher = {ACM},
	Title = {Fault localization prioritization: Comparing information-theoretic and coverage-based approaches},
	Volume = {22},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWW9vMjAxM2FiMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KWW9vMjAxM2FiMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WW9vMjAxM2FiMAAADgAWAAoAWQBvAG8AMgAwADEAMwBhAGIAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1lvbzIwMTNhYjAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==}}

@article{Yoo:2013aa,
	Author = {Yoo, Shin and Harman, Mark and Ur, Shmuel},
	Date-Added = {2017-07-06 06:06:46 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Issn = {1382-3256},
	Journal = {Empirical Software Engineering},
	Keywords = {SBSE; GPGPU; Test Suite Minimisation;Regression Testing},
	Language = {English},
	Number = {3},
	Pages = {550-593},
	Publisher = {Springer US},
	Title = {{GPGPU} test suite minimisation: Search Based Software Engineering Performance Improvement using Graphics Cards},
	Volume = {18},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWW9vMjAxM2FhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KWW9vMjAxM2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WW9vMjAxM2FhMAAADgAWAAoAWQBvAG8AMgAwADEAMwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1lvbzIwMTNhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==}}

@article{Harman:2013aa,
	Author = {Harman, Mark and Lakhotia, Kiran and Singer, Jeremy and White, David R. and Yoo, Shin},
	Date-Added = {2017-07-06 06:05:51 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Journal = {Journal of Systems and Software},
	Keywords = {SBSE;Cloud Computing},
	Number = {9},
	Pages = {2225 - 2241},
	Title = {Cloud engineering is Search Based Software Engineering too},
	Volume = {86},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAxM2FhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NSGFybWFuMjAxM2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6SGFybWFuMjAxM2FhMAAOABwADQBIAGEAcgBtAGEAbgAyADAAMQAzAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAxM2FhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=}}

@article{Harman:2014aa,
	Author = {Harman, Mark and Krinke, Jens and Medina-Bulo, Inmaculada and Palomo-Lozano, Francisco and Ren, Jian and Yoo, Shin},
	Date-Added = {2017-07-06 03:47:47 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Journal = {ACM Transactions on Software Engineering and Methodology},
	Keywords = {Next Release Problem},
	Number = {2},
	Pages = {19:1--19:31},
	Title = {Exact Scalable Sensitivity Analysis for the Next Release Problem},
	Volume = {23},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAxNGFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NSGFybWFuMjAxNGFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6SGFybWFuMjAxNGFhMAAOABwADQBIAGEAcgBtAGEAbgAyADAAMQA0AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAxNGFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=}}

@article{Petke:2015aa,
	Author = {Petke, Justyna and Cohen, Myra B. and Harman, Mark and Yoo, Shin},
	Date-Added = {2017-07-06 03:47:07 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Combinatorial Interaction Testing (CIT); Software Testing},
	Month = sep,
	Number = {9},
	Pages = {901-924},
	Title = {Practical Combinatorial Interaction Testing: Empirical Findings on Efficiency and Early Fault Detection},
	Volume = {41},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUGV0a2UyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxQZXRrZTIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpQZXRrZTIwMTVhYTAAAA4AGgAMAFAAZQB0AGsAZQAyADAAMQA1AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUGV0a2UyMDE1YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=}}

@article{Yoo:2017aa,
	Author = {Yoo, Shin and Xie, Xiaoyuan and Kuo, Fei-Ching and Chen, Tsong Yueh and Harman, Mark},
	Date-Added = {2017-07-06 03:46:03 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Journal = {ACM Transactions on Software Engineering and Methodology},
	Keywords = {Spectrum-based Fault Localization (SBFL);Genetic Programming (GP)},
	Title = {Human Competitiveness of Genetic Programming in SBFL: Theoretical and Empirical Analysis},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWW9vMjAxN2FhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KWW9vMjAxN2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WW9vMjAxN2FhMAAADgAWAAoAWQBvAG8AMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1lvbzIwMTdhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==}}

@article{Yoo:2016aa,
	Author = {Yoo, Shin and Binkley, David and Eastman, Roger},
	Date-Added = {2017-07-06 03:45:22 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Journal = {Journal of Systems and Software},
	Keywords = {Program Slicing;ORBS},
	Pages = {60-78},
	Title = {Observational slicing based on visual semantics},
	Volume = {129},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWW9vMjAxNmFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KWW9vMjAxNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WW9vMjAxNmFhMAAADgAWAAoAWQBvAG8AMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1lvbzIwMTZhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==}}

@article{Barr:2015ab,
	Author = {Barr, Earl and Harman, Mark and McMinn, Phil and Shahbaz, Muzammil and Yoo, Shin},
	Date-Added = {2017-07-06 03:43:03 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Software Testing;Survey},
	Month = may,
	Number = {5},
	Pages = {507-525},
	Title = {The Oracle Problem in Software Testing: A Survey},
	Volume = {41},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmFycjIwMTVhYjDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0JhcnIyMDE1YWIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJhcnIyMDE1YWIwAA4AGAALAEIAYQByAHIAMgAwADEANQBhAGIAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0JhcnIyMDE1YWIwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==}}

@article{Binkley:1996aa,
	Abstract = {Program slicing is a technique for reducing the amount of information that needs to be absorbed by a programmer. Given a point of ``interest'' in a program, described by a variable and a statement, a program slice gives all the statements that contributed to the value of the variable at the point, and elides unnecessary statements. This chapter surveys techniques for computing program slices and the applications of program slicing to development, testing, maintenance, and metrics.},
	Author = {David W. Binkley and Keith Brian Gallagher},
	Date-Added = {2017-07-06 01:57:52 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {http://dx.doi.org/10.1016/S0065-2458(08)60641-5},
	Issn = {0065-2458},
	Journal = {Advances in Computers},
	Keywords = {Program Slicing;Survey},
	Pages = {1 - 50},
	Title = {Program Slicing},
	Url = {http://www.sciencedirect.com/science/article/pii/S0065245808606415},
	Volume = {43},
	Year = {1996},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmlua2xleTE5OTZhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkJpbmtsZXkxOTk2YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJpbmtsZXkxOTk2YWEwAAAOAB4ADgBCAGkAbgBrAGwAZQB5ADEAOQA5ADYAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9CaW5rbGV5MTk5NmFhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0065245808606415},
	Bdsk-Url-2 = {http://dx.doi.org/10.1016/S0065-2458(08)60641-5}}

@inproceedings{Santelices:2013aa,
	Acmid = {2486981},
	Address = {Piscataway, NJ, USA},
	Author = {Santelices, Raul and Zhang, Yiji and Jiang, Siyuan and Cai, Haipeng and Zhang, Ying-Jie},
	Booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
	Date-Added = {2017-07-06 01:56:44 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Isbn = {978-1-4673-3076-3},
	Keywords = {Program Slicing},
	Location = {San Francisco, CA, USA},
	Numpages = {4},
	Pages = {1269--1272},
	Publisher = {IEEE Press},
	Series = {ICSE '13},
	Title = {Quantitative Program Slicing: Separating Statements by Relevance},
	Url = {http://dl.acm.org/citation.cfm?id=2486788.2486981},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU2FudGVsaWNlczIwMTNhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EVNhbnRlbGljZXMyMDEzYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlNhbnRlbGljZXMyMDEzYWEwAA4AJAARAFMAYQBuAHQAZQBsAGkAYwBlAHMAMgAwADEAMwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1NhbnRlbGljZXMyMDEzYWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=2486788.2486981}}

@inproceedings{Wen:2012aa,
	Acmid = {2337469},
	Address = {Piscataway, NJ, USA},
	Author = {Wen, Wanzhi},
	Booktitle = {Proceedings of the 34th International Conference on Software Engineering},
	Date-Added = {2017-07-06 01:55:45 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Isbn = {978-1-4673-1067-3},
	Keywords = {Fault Localization; Program Slicing},
	Location = {Zurich, Switzerland},
	Numpages = {4},
	Pages = {1511--1514},
	Publisher = {IEEE Press},
	Series = {ICSE '12},
	Title = {Software Fault Localization Based on Program Slicing Spectrum},
	Url = {http://dl.acm.org/citation.cfm?id=2337223.2337469},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2VuMjAxMmFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KV2VuMjAxMmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6V2VuMjAxMmFhMAAADgAWAAoAVwBlAG4AMgAwADEAMgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1dlbjIwMTJhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=2337223.2337469}}

@article{Barraclough:2010aa,
	Abstract = {We define a program semantics that is preserved by dependence-based slicing algorithms. It is a natural extension, to non-terminating programs, of the semantics introduced by Weiser (which only considered terminating ones) and, as such, is an accurate characterisation of the semantic relationship between a program and the slice produced by these algorithms. Unlike other approaches, apart from Weiser's original one, it is based on strict standard semantics which models the `normal' execution of programs on a von Neumann machine and, thus, has the advantage of being intuitive. This is essential since one of the main applications of slicing is program comprehension. Although our semantics handles non-termination, it is defined wholly in terms of finite trajectories, without having to resort to complex, counter-intuitive, non-standard models of computation. As well as being simpler, unlike other approaches to this problem, our semantics is substitutive. Substitutivity is an important property because it greatly enhances the ability to reason about correctness of meaning-preserving program transformations such as slicing.},
	Author = {Richard W. Barraclough and David Binkley and Sebastian Danicic and Mark Harman and Robert M. Hierons and {\'A}kos Kiss and Mike Laurence and Lahcen Ouarbya},
	Date-Added = {2017-07-06 01:54:37 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {http://dx.doi.org/10.1016/j.tcs.2009.10.025},
	Issn = {0304-3975},
	Journal = {Theoretical Computer Science},
	Keywords = {Program Slicing},
	Number = {11},
	Pages = {1372 - 1386},
	Title = {A trajectory-based strict semantics for program slicing},
	Url = {http://www.sciencedirect.com/science/article/pii/S0304397509007944},
	Volume = {411},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmFycmFjbG91Z2gyMDEwYWEw0hcLGBlXTlMuZGF0YU8RAZIAAAAAAZIAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xJCYXJyYWNsb3VnaDIwMTBhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIASS86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpCYXJyYWNsb3VnaDIwMTBhYTAAAA4AJgASAEIAYQByAHIAYQBjAGwAbwB1AGcAaAAyADAAMQAwAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAR1VzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmFycmFjbG91Z2gyMDEwYWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANsA4ADoAn4CgAKFApACmQKnAqsCsgK7AsACzQLQAuIC5QLqAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAuw=},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0304397509007944},
	Bdsk-Url-2 = {http://dx.doi.org/10.1016/j.tcs.2009.10.025}}

@inproceedings{Hoffmann:2013aa,
	Acmid = {2480706},
	Address = {New York, NY, USA},
	Author = {Hoffmann, Johannes and Ussath, Martin and Holz, Thorsten and Spreitzenbarth, Michael},
	Booktitle = {Proceedings of the 28th Annual ACM Symposium on Applied Computing},
	Date-Added = {2017-07-06 01:52:12 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2480362.2480706},
	Isbn = {978-1-4503-1656-9},
	Keywords = {Program Slicing; Smali; SAAF},
	Location = {Coimbra, Portugal},
	Numpages = {8},
	Pages = {1844--1851},
	Publisher = {ACM},
	Series = {SAC '13},
	Title = {Slicing Droids: Program Slicing for Smali Code},
	Url = {http://doi.acm.org/10.1145/2480362.2480706},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSG9mZm1hbm4yMDEzYWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9Ib2ZmbWFubjIwMTNhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpIb2ZmbWFubjIwMTNhYTAADgAgAA8ASABvAGYAZgBtAGEAbgBuADIAMAAxADMAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9Ib2ZmbWFubjIwMTNhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2480362.2480706},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2480362.2480706}}

@inproceedings{Jiang:2010aa,
	Abstract = {Program debugging is an important process to improve the quality of software. Runtime exception can occur often and can be difficult to debug. In this paper, we present a new approach for locating faults that cause runtime exceptions in Java programs due to error assignment of a value that finally leads to the exception. Our approach first uses program slicing to reduce the search scope, then performs a backward data flow analysis, starting from the point where the exception occurred, and then uses stack trace information to guide the analysis to determine the source statement that is responsible for the runtime exception. The paper also presents a case study to demonstrate that the method is available. The approach not only resolves partly the imprecise of static techniques, but also reduces partly the heavy performance overhead of dynamic techniques.},
	Author = {S. Jiang and H. Zhang and Q. Wang and Y. Zhang},
	Booktitle = {2010 10th International Conference on Quality Software},
	Date-Added = {2017-07-06 01:51:10 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/QSIC.2010.23},
	Issn = {1550-6002},
	Keywords = {Java; Program Slicing; Runtime Exception},
	Month = {July},
	Pages = {393-398},
	Title = {A Debugging Approach for Java Runtime Exceptions Based on Program Slicing and Stack Traces},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSmlhbmcyMDEwYWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxKaWFuZzIwMTBhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpKaWFuZzIwMTBhYTAAAA4AGgAMAEoAaQBhAG4AZwAyADAAMQAwAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSmlhbmcyMDEwYWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/QSIC.2010.23}}

@inproceedings{Wang:2004aa,
	Abstract = {Dynamic slicing is a well-known program debugging technique. Given a program P and input I, it finds all program statements which directly/indirectly affect the values of some variables' occurrences when P is executed with I. Dynamic slicing algorithms often proceed by traversing the execution trace of P produced by input I (or a dependence graph which captures control/data flow in the execution trace). Consequently, it is important to develop space efficient representations of the execution trace. In this paper, we use results from data compression to compactly represent bytecode traces of sequential Java programs. The major space savings come from the optimized representation of data (instruction) addresses used by memory reference (branch) bytecodes as operands. We give detailed experimental results on the space efficiency and time overheads for our compact trace representation. We then show how dynamic slicing algorithms can directly traverse our compact traces without resorting to costly decompression. We also develop an extension of dynamic slicing which allows us to explain omission errors (i.e. why some events did not happen during program execution).},
	Author = {Tao Wang and A. Roychoudhury},
	Booktitle = {Proceedings. 26th International Conference on Software Engineering},
	Date-Added = {2017-07-06 01:49:21 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1109/ICSE.2004.1317473},
	Issn = {0270-5257},
	Keywords = {Java; Program Slicing; Bytecode Trace},
	Month = {May},
	Pages = {512-521},
	Title = {Using compressed bytecode traces for slicing Java programs},
	Year = {2004},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2FuZzIwMDRhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C1dhbmcyMDA0YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOldhbmcyMDA0YWEwAA4AGAALAFcAYQBuAGcAMgAwADAANABhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1dhbmcyMDA0YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSE.2004.1317473}}

@article{Ranganath:2007aa,
	Abstract = {Program slicing is a program analysis and transformation technique that has been successfully used in a wide range of applications including program comprehension, debugging, maintenance, testing, and verification. However, there are only few fully featured implementations of program slicing that are available for industrial applications or academic research. In particular, very little tool support exists for slicing programs written in modern object-oriented languages such as Java, C{\#}, or C++. In this paper, we present Indus---a robust framework for analyzing and slicing concurrent Java programs, and Kaveri---a feature-rich Eclipse-based GUI front end for Indus slicing. For Indus, we describe the underlying tool architecture, analysis components, and program dependence capabilities required for slicing. In addition, we present a collection of advanced features useful for effective slicing of Java programs including calling-context sensitive slicing, scoped slicing, control slicing, and chopping. For Kaveri, we discuss the design goals and basic capabilities of the graphical facilities integrated into a Java development environment to present the slicing information. This paper is an extended version of a tool demonstration paper presented at the International Conference on Fundamental Aspects of Software Engineering (FASE 2005). Thus, the paper highlights tool capabilities and engineering issues and refers the reader to other papers for technical details.},
	Author = {Ranganath, Venkatesh Prasad and Hatcliff, John},
	Date-Added = {2017-07-06 01:47:06 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Day = {01},
	Doi = {10.1007/s10009-007-0043-0},
	Issn = {1433-2787},
	Journal = {International Journal on Software Tools for Technology Transfer},
	Keywords = {Program Slicing; Java; Indus; Kaveri},
	Month = {Oct},
	Number = {5},
	Pages = {489--504},
	Title = {Slicing concurrent Java programs using Indus and Kaveri},
	Url = {http://dx.doi.org/10.1007/s10009-007-0043-0},
	Volume = {9},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUmFuZ2FuYXRoMjAwN2FhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QUmFuZ2FuYXRoMjAwN2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6UmFuZ2FuYXRoMjAwN2FhMAAADgAiABAAUgBhAG4AZwBhAG4AYQB0AGgAMgAwADAANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1JhbmdhbmF0aDIwMDdhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10009-007-0043-0}}

@article{Chen:2001aa,
	Acmid = {375418},
	Address = {New York, NY, USA},
	Author = {Chen, Zhenqiang and Xu, Baowen},
	Date-Added = {2017-07-06 01:45:25 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/375431.375418},
	Issn = {0362-1340},
	Issue_Date = {April 1, 2001},
	Journal = {SIGPLAN Not.},
	Keywords = {Program Slicing; Java},
	Month = apr,
	Number = {4},
	Numpages = {8},
	Pages = {33--40},
	Publisher = {ACM},
	Title = {Slicing Object-oriented Java Programs},
	Url = {http://doi.acm.org/10.1145/375431.375418},
	Volume = {36},
	Year = {2001},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2hlbjIwMDFhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0NoZW4yMDAxYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkNoZW4yMDAxYWEwAA4AGAALAEMAaABlAG4AMgAwADAAMQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0NoZW4yMDAxYWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/375431.375418},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/375431.375418}}

@inproceedings{Corbett:2000aa,
	Abstract = {Finite-state verification techniques, such as model checking, have shown promise as a cost-effective means for finding defects in hardware designs. To date, the application of these techniques to software has been hindered by several obstacles. Chief among these is the problem of constructing a finite-state model that approximates the executable behavior of the software system of interest. Current best-practice involves hand construction of models which is expensive (prohibitive for all but the smallest systems), prone to errors (which can result in misleading verification results), and difficult to optimize (which is necessary to combat the exponential complexity of verification algorithms). The authors describe an integrated collection of program analysis and transformation components, called Bandera, that enables the automatic extraction of safe, compact finite-state models from program source code. Bandera takes as input Java source code and generates a program model in the input language of one of several existing verification tools; Bandera also maps verifier outputs back to the original source code. We discuss the major components of Bandera and give an overview of how it can be used to model check correctness properties of Java programs.},
	Author = {J. C. Corbett and M. B. Dwyer and J. Hatcliff and S. Laubach and C. S. Pasareanu and Robby and Hongjun Zheng},
	Booktitle = {Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium},
	Date-Added = {2017-07-05 04:45:01 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/337180.337625},
	Issn = {0270-5257},
	Keywords = {Java;Program Slicing},
	Month = {June},
	Pages = {439-448},
	Title = {Bandera: extracting finite-state models from Java source code},
	Year = {2000},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ29yYmV0dDIwMDBhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkNvcmJldHQyMDAwYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkNvcmJldHQyMDAwYWEwAAAOAB4ADgBDAG8AcgBiAGUAdAB0ADIAMAAwADAAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9Db3JiZXR0MjAwMGFhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/337180.337625}}

@inproceedings{Acharya:2011aa,
	Acmid = {1985898},
	Address = {New York, NY, USA},
	Author = {Acharya, Mithun and Robinson, Brian},
	Booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
	Date-Added = {2017-07-05 04:42:10 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/1985793.1985898},
	Isbn = {978-1-4503-0445-0},
	Keywords = {Program Slicing;Static Program Slicing;Change Impact Analysis;},
	Location = {Waikiki, Honolulu, HI, USA},
	Numpages = {10},
	Pages = {746--755},
	Publisher = {ACM},
	Series = {ICSE '11},
	Title = {Practical Change Impact Analysis Based on Static Program Slicing for Industrial Software Systems},
	Url = {http://doi.acm.org/10.1145/1985793.1985898},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQWNoYXJ5YTIwMTFhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkFjaGFyeWEyMDExYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkFjaGFyeWEyMDExYWEwAAAOAB4ADgBBAGMAaABhAHIAeQBhADIAMAAxADEAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9BY2hhcnlhMjAxMWFhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1985793.1985898},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1985793.1985898}}

@article{Ko:2010aa,
	Acmid = {1824761},
	Address = {New York, NY, USA},
	Articleno = {4},
	Author = {Ko, Andrew J. and Myers, Brad A.},
	Date-Added = {2017-07-05 04:40:15 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/1824760.1824761},
	Issn = {1049-331X},
	Issue_Date = {August 2010},
	Journal = {ACM Trans. Softw. Eng. Methodol.},
	Keywords = {Question; Java;},
	Month = sep,
	Number = {2},
	Numpages = {36},
	Pages = {4:1--4:36},
	Publisher = {ACM},
	Title = {Extracting and Answering Why and Why Not Questions About Java Program Output},
	Url = {http://doi.acm.org/10.1145/1824760.1824761},
	Volume = {20},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvS28yMDEwYWEw0hcLGBlXTlMuZGF0YU8RAWwAAAAAAWwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wlLbzIwMTBhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpLbzIwMTBhYTAADgAUAAkASwBvADIAMAAxADAAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgA+VXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9LbzIwMTBhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDSANcA3wJPAlECVgJhAmoCeAJ8AoMCjAKRAp4CoQKzArYCuwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAK9},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1824760.1824761}}

@inproceedings{Zhao:1999aa,
	Abstract = {Although many slicing algorithms have been proposed for object oriented programs, no slicing algorithm has been proposed which can be used to handle the problem of slicing concurrent Java programs correctly. We propose a slicing algorithm for concurrent Java programs. To slice concurrent Java programs, we present a dependence based representation called multithreaded dependence graph, which extends previous dependence graphs to represent concurrent Java programs. We also show how static slices of a concurrent Java program can be computed efficiently based on its multithreaded dependence graph},
	Author = {Jianjun Zhao},
	Booktitle = {Proceedings Seventh International Workshop on Program Comprehension},
	Date-Added = {2017-07-05 04:37:34 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1109/WPC.1999.777751},
	Issn = {1092-8138},
	Keywords = {Java;Program Slicing;Concurrent Program},
	Pages = {126-133},
	Title = {Slicing concurrent Java programs},
	Year = {1999},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmhhbzE5OTlhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C1poYW8xOTk5YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlpoYW8xOTk5YWEwAA4AGAALAFoAaABhAG8AMQA5ADkAOQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1poYW8xOTk5YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/WPC.1999.777751}}

@inproceedings{O-Cinneide:2012aa,
	Acmid = {2372260},
	Address = {New York, NY, USA},
	Author = {\'{O} Cinn{\'e}ide, Mel and Tratt, Laurence and Harman, Mark and Counsell, Steve and Hemati Moghadam, Iman},
	Booktitle = {Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement},
	Date-Added = {2017-06-30 01:08:01 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2372251.2372260},
	Isbn = {978-1-4503-1056-7},
	Keywords = {Software Metrics; SBSE; Refectoring},
	Location = {Lund, Sweden},
	Numpages = {10},
	Pages = {49--58},
	Publisher = {ACM},
	Series = {ESEM '12},
	Title = {Experimental Assessment of Software Metrics Using Automated Refactoring},
	Url = {http://doi.acm.org/10.1145/2372251.2372260},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTy1DaW5uZWlkZTIwMTJhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EU8tQ2lubmVpZGUyMDEyYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOk8tQ2lubmVpZGUyMDEyYWEwAA4AJAARAE8ALQBDAGkAbgBuAGUAaQBkAGUAMgAwADEAMgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL08tQ2lubmVpZGUyMDEyYWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2372251.2372260},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2372251.2372260}}

@article{Fraser:2013aa,
	Abstract = {Not all bugs lead to program crashes, and not always is there a formal specification to check the correctness of a software test's outcome. A common scenario in software testing is therefore that test data are generated, and a tester manually adds test oracles. As this is a difficult task, it is important to produce small yet representative test sets, and this representativeness is typically measured using code coverage. There is, however, a fundamental problem with the common approach of targeting one coverage goal at a time: Coverage goals are not independent, not equally difficult, and sometimes infeasible-the result of test generation is therefore dependent on the order of coverage goals and how many of them are feasible. To overcome this problem, we propose a novel paradigm in which whole test suites are evolved with the aim of covering all coverage goals at the same time while keeping the total size as small as possible. This approach has several advantages, as for example, its effectiveness is not affected by the number of infeasible targets in the code. We have implemented this novel approach in the EvoSuite tool, and compared it to the common approach of addressing one goal at a time. Evaluated on open source libraries and an industrial case study for a total of 1,741 classes, we show that EvoSuite achieved up to 188 times the branch coverage of a traditional approach targeting single branches, with up to 62 percent smaller test suites.},
	Author = {G. Fraser and A. Arcuri},
	Date-Added = {2017-06-29 09:22:00 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/TSE.2012.14},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {SBSE; Genetic Algorithm (GA); EvoSuite; Test Generation; Branch Coverage},
	Month = {Feb},
	Number = {2},
	Pages = {276-291},
	Title = {Whole Test Suite Generation},
	Volume = {39},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRnJhc2VyMjAxM2FhMdIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NRnJhc2VyMjAxM2FhMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6RnJhc2VyMjAxM2FhMQAOABwADQBGAHIAYQBzAGUAcgAyADAAMQAzAGEAYQAxAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRnJhc2VyMjAxM2FhMQATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2012.14}}

@inproceedings{Bethard:2010aa,
	Acmid = {1871517},
	Address = {New York, NY, USA},
	Author = {Bethard, Steven and Jurafsky, Dan},
	Booktitle = {Proceedings of the 19th ACM International Conference on Information and Knowledge Management},
	Date-Added = {2017-06-29 09:21:20 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/1871437.1871517},
	Isbn = {978-1-4503-0099-5},
	Keywords = {Citation Recommendation; Retrieval Models},
	Location = {Toronto, ON, Canada},
	Numpages = {10},
	Pages = {609--618},
	Publisher = {ACM},
	Series = {CIKM '10},
	Title = {Who Should I Cite: Learning Literature Search Models from Citation Behavior},
	Url = {http://doi.acm.org/10.1145/1871437.1871517},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmV0aGFyZDIwMTBhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkJldGhhcmQyMDEwYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJldGhhcmQyMDEwYWEwAAAOAB4ADgBCAGUAdABoAGEAcgBkADIAMAAxADAAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9CZXRoYXJkMjAxMGFhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1871437.1871517},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1871437.1871517}}

@inproceedings{Binkley:2014ab,
	Acmid = {2597150},
	Address = {New York, NY, USA},
	Author = {Binkley, David and Heinz, Daniel and Lawrie, Dawn and Overfelt, Justin},
	Booktitle = {Proceedings of the 22Nd International Conference on Program Comprehension},
	Date-Added = {2017-06-29 09:19:34 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2597008.2597150},
	Isbn = {978-1-4503-2879-1},
	Keywords = {Latent Dirichlet Allocation (LDA)},
	Location = {Hyderabad, India},
	Numpages = {11},
	Pages = {26--36},
	Publisher = {ACM},
	Series = {ICPC 2014},
	Title = {Understanding LDA in Source Code Analysis},
	Url = {http://doi.acm.org/10.1145/2597008.2597150},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmlua2xleTIwMTRhYjDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkJpbmtsZXkyMDE0YWIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJpbmtsZXkyMDE0YWIwAAAOAB4ADgBCAGkAbgBrAGwAZQB5ADIAMAAxADQAYQBiADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9CaW5rbGV5MjAxNGFiMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2597008.2597150},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2597008.2597150}}

@inproceedings{Zhang:2016aa,
	Abstract = {During maintenance, developers often need to understand the purpose of a test. One of the most potentially useful sources of information for understanding a test is its name. Ideally, test names are descriptive in that they accurately summarize both the scenario and the expected outcome of the test. Despite the benefits of being descriptive, test names often fall short of this goal. In this paper we present a new approach for automatically generating descriptive names for existing test bodies. Using a combination of natural-language program analysis and text generation, the technique creates names that summarize the test's scenario and the expected outcome. The results of our evaluation show that, (1) compared to alternative approaches, the names generated by our technique are significantly more similar to human-generated names and are nearly always preferred by developers, (2) the names generated by our technique are preferred over or are equivalent to the original test names in 83% of cases, and (3) our technique is several orders of magnitude faster than manually writing test names.},
	Author = {B. Zhang and E. Hill and J. Clause},
	Booktitle = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
	Date-Added = {2017-06-29 09:18:49 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Keywords = {Unit Testing; Descriptive Names; Maintenance},
	Month = {Sept},
	Pages = {625-636},
	Title = {Towards automatically generating descriptive names for unit tests},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmhhbmcyMDE2YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxaaGFuZzIwMTZhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpaaGFuZzIwMTZhYTAAAA4AGgAMAFoAaABhAG4AZwAyADAAMQA2AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWmhhbmcyMDE2YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=}}

@inproceedings{Papadakis:2016aa,
	Acmid = {2931040},
	Address = {New York, NY, USA},
	Author = {Papadakis, Mike and Henard, Christopher and Harman, Mark and Jia, Yue and Le Traon, Yves},
	Booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
	Date-Added = {2017-06-29 09:18:16 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2931037.2931040},
	Isbn = {978-1-4503-4390-9},
	Keywords = {Mutation Testing, Test Assessment},
	Location = {Saarbr\&\#252;cken, Germany},
	Numpages = {12},
	Pages = {354--365},
	Publisher = {ACM},
	Series = {ISSTA 2016},
	Title = {Threats to the Validity of Mutation-based Test Assessment},
	Url = {http://doi.acm.org/10.1145/2931037.2931040},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUGFwYWRha2lzMjAxNmFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QUGFwYWRha2lzMjAxNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6UGFwYWRha2lzMjAxNmFhMAAADgAiABAAUABhAHAAYQBkAGEAawBpAHMAMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1BhcGFkYWtpczIwMTZhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2931037.2931040},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2931037.2931040}}

@inproceedings{Gopinath:2017aa,
	Abstract = {Fault masking happens when the effect of one fault serves to mask that of another fault for particular test inputs. The coupling effect is relied upon by testing practitioners to ensure that fault masking is rare. It states that complex faults are coupled to simple faults in such a way that a test data set that detects all simple faults in a program will detect a high percentage of the complex faults. While this effect has been empirically evaluated, our theoretical understanding of the coupling effect is as yet incomplete. Wah proposed a theory of the coupling effect on finite bijective (or near bijective) functions with the same domain and co-domain and assuming a uniform distribution for candidate functions. This model, however, was criticized as being too simple to model real systems, as it did not account for differing domain and co-domain in real programs, or for the syntactic neighborhood. We propose a new theory of fault coupling for general functions (with certain constraints). We show that there are two kinds of fault interactions, of which only the weak interaction can be modeled by the theory of the coupling effect. The strong interaction can produce faults that are semantically different from the original faults. These faults should hence be considered as independent atomic faults. Our analysis shows that the theory holds even when the effect of the syntactic neighborhood of the program is considered. We analyze numerous real-world programs with real faults to validate our hypothesis.},
	Author = {R. Gopinath and C. Jensen and A. Groce},
	Booktitle = {2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
	Date-Added = {2017-06-29 09:17:49 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/ICST.2017.12},
	Keywords = {Composite Faults},
	Month = {March},
	Pages = {47-57},
	Title = {The Theory of Composite Faults},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR29waW5hdGgyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9Hb3BpbmF0aDIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpHb3BpbmF0aDIwMTdhYTAADgAgAA8ARwBvAHAAaQBuAGEAdABoADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9Hb3BpbmF0aDIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICST.2017.12}}

@inproceedings{Barr:2014aa,
	Acmid = {2635898},
	Address = {New York, NY, USA},
	Author = {Barr, Earl T. and Brun, Yuriy and Devanbu, Premkumar and Harman, Mark and Sarro, Federica},
	Booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
	Date-Added = {2017-06-29 09:17:16 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2635868.2635898},
	Isbn = {978-1-4503-3056-5},
	Keywords = {Automated Program Repair; Plastic Surgery Hypothesis},
	Location = {Hong Kong, China},
	Numpages = {12},
	Pages = {306--317},
	Publisher = {ACM},
	Series = {FSE 2014},
	Title = {The Plastic Surgery Hypothesis},
	Url = {http://doi.acm.org/10.1145/2635868.2635898},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmFycjIwMTRhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0JhcnIyMDE0YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJhcnIyMDE0YWEwAA4AGAALAEIAYQByAHIAMgAwADEANABhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0JhcnIyMDE0YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2635868.2635898},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2635868.2635898}}

@inproceedings{Panichella:2016aa,
	Acmid = {2884847},
	Address = {New York, NY, USA},
	Author = {Panichella, Sebastiano and Panichella, Annibale and Beller, Moritz and Zaidman, Andy and Gall, Harald C.},
	Booktitle = {Proceedings of the 38th International Conference on Software Engineering},
	Date-Added = {2017-06-29 09:16:49 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2884781.2884847},
	Isbn = {978-1-4503-3900-1},
	Keywords = {Software Testing; Test Case},
	Location = {Austin, Texas},
	Numpages = {12},
	Pages = {547--558},
	Publisher = {ACM},
	Series = {ICSE '16},
	Title = {The Impact of Test Case Summaries on Bug Fixing Performance: An Empirical Investigation},
	Url = {http://doi.acm.org/10.1145/2884781.2884847},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUGFuaWNoZWxsYTIwMTZhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EVBhbmljaGVsbGEyMDE2YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlBhbmljaGVsbGEyMDE2YWEwAA4AJAARAFAAYQBuAGkAYwBoAGUAbABsAGEAMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1BhbmljaGVsbGEyMDE2YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2884781.2884847},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2884781.2884847}}

@inproceedings{Harman:2007aa,
	Acmid = {1254729},
	Address = {Washington, DC, USA},
	Author = {Harman, Mark},
	Booktitle = {2007 Future of Software Engineering},
	Date-Added = {2017-06-29 09:16:25 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/FOSE.2007.29},
	Isbn = {0-7695-2829-5},
	Keywords = {SBSE},
	Numpages = {16},
	Pages = {342--357},
	Publisher = {IEEE Computer Society},
	Series = {FOSE '07},
	Title = {The Current State and Future of Search Based Software Engineering},
	Url = {http://dx.doi.org/10.1109/FOSE.2007.29},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAwN2FhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NSGFybWFuMjAwN2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6SGFybWFuMjAwN2FhMAAOABwADQBIAGEAcgBtAGEAbgAyADAAMAA3AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAwN2FhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/FOSE.2007.29}}

@inproceedings{Feldt:2016aa,
	Abstract = {A common and natural intuition among software testers is that test cases need to differ if a software system is to be tested properly and its quality ensured. Consequently, much research has gone into formulating distance measures for how test cases, their inputs and/or their outputs differ. However, common to these proposals is that they are data type specific and/or calculate the diversity only between pairs of test inputs, traces or outputs. We propose a new metric to measure the diversity of sets of tests: the test set diameter (TSDm). It extends our earlier, pairwise test diversity metrics based on recent advances in information theory regarding the calculation of the normalized compression distance (NCD) for multisets. A key advantage is that TSDm is a universal measure of diversity and so can be applied to any test set regardless of data type of the test inputs (and, moreover, to other test-related data such as execution traces). But this universality comes at the cost of greater computational effort compared to competing approaches. Our experiments on four different systems show that the test set diameter can help select test sets with higher structural and fault coverage than random selection even when only applied to test inputs. This can enable early test design and selection, prior to even having a software system to test, and complement other types of test automation and analysis. We argue that this quantification of test set diversity creates a number of opportunities to better understand software quality and provides practical ways to increase it.},
	Author = {R. Feldt and S. Poulding and D. Clark and S. Yoo},
	Booktitle = {2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
	Date-Added = {2017-06-29 09:15:56 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/ICST.2016.33},
	Keywords = {Test Set Diameter(TSDm); Test Case},
	Month = {April},
	Pages = {223-233},
	Title = {Test Set Diameter: Quantifying the Diversity of Sets of Test Cases},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRmVsZHQyMDE2YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxGZWxkdDIwMTZhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpGZWxkdDIwMTZhYTAAAA4AGgAMAEYAZQBsAGQAdAAyADAAMQA2AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRmVsZHQyMDE2YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICST.2016.33}}

@inproceedings{Lee:2015aa,
	Acmid = {2818783},
	Address = {Piscataway, NJ, USA},
	Author = {Lee, Yun Young and Marinov, Darko and Johnson, Ralph E.},
	Booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 1},
	Date-Added = {2017-06-29 09:14:53 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Isbn = {978-1-4799-1934-5},
	Keywords = {Tempura; Code Completion; Multiple Revision},
	Location = {Florence, Italy},
	Numpages = {11},
	Pages = {212--222},
	Publisher = {IEEE Press},
	Series = {ICSE '15},
	Title = {Tempura: Temporal Dimension for IDEs},
	Url = {http://dl.acm.org/citation.cfm?id=2818754.2818783},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTGVlMjAxNWFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KTGVlMjAxNWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TGVlMjAxNWFhMAAADgAWAAoATABlAGUAMgAwADEANQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0xlZTIwMTVhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=2818754.2818783}}

@inproceedings{Ceccato:2016aa,
	Acmid = {2970343},
	Address = {New York, NY, USA},
	Author = {Ceccato, Mariano and Nguyen, Cu D. and Appelt, Dennis and Briand, Lionel C.},
	Booktitle = {Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
	Date-Added = {2017-06-29 09:13:42 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2970276.2970343},
	Isbn = {978-1-4503-3845-5},
	Keywords = {SQL-injection, Security Testing; SOFIA},
	Location = {Singapore, Singapore},
	Numpages = {11},
	Pages = {167--177},
	Publisher = {ACM},
	Series = {ASE 2016},
	Title = {SOFIA: An Automated Security Oracle for Black-box Testing of SQL-injection Vulnerabilities},
	Url = {http://doi.acm.org/10.1145/2970276.2970343},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2VjY2F0bzIwMTZhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkNlY2NhdG8yMDE2YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkNlY2NhdG8yMDE2YWEwAAAOAB4ADgBDAGUAYwBjAGEAdABvADIAMAAxADYAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9DZWNjYXRvMjAxNmFhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2970276.2970343},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2970276.2970343}}

@inproceedings{Palikareva:2016aa,
	Acmid = {2884845},
	Address = {New York, NY, USA},
	Author = {Palikareva, Hristina and Kuchta, Tomasz and Cadar, Cristian},
	Booktitle = {Proceedings of the 38th International Conference on Software Engineering},
	Date-Added = {2017-06-29 09:12:16 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2884781.2884845},
	Isbn = {978-1-4503-3900-1},
	Keywords = {Cross-version Checks, Regression Bugs; Software Testing; Symbolic Execution},
	Location = {Austin, Texas},
	Numpages = {12},
	Pages = {1181--1192},
	Publisher = {ACM},
	Series = {ICSE '16},
	Title = {Shadow of a Doubt: Testing for Divergences Between Software Versions},
	Url = {http://doi.acm.org/10.1145/2884781.2884845},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUGFsaWthcmV2YTIwMTZhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EVBhbGlrYXJldmEyMDE2YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlBhbGlrYXJldmEyMDE2YWEwAA4AJAARAFAAYQBsAGkAawBhAHIAZQB2AGEAMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1BhbGlrYXJldmEyMDE2YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2884781.2884845},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2884781.2884845}}

@inproceedings{Yoo:2014aa,
	Abstract = {Program slicing has seen a plethora of applications and variations since its introduction over thirty years ago. The dominant method for computing slices involves significant complex source-code analysis to model the dependences in the code. A recently introduced alternative, Observation-Based Slicing (ORBS), sidesteps this complexity by observing the behavior of candidate slices. ORBS has several other strengths, including the ability to slice multi-language systems. However, ORBS remains rooted in tradition as it captures semantics by comparing sequences of values. This raises the question of whether it is possible to extend slicing beyond its traditional semantic roots. A few existing projects have attempted this, but the extension requires considerable effort. If it is possible to build on the ORBS platform to more easily generalize slicing to languages with non-traditional semantics, then there is the potential to vastly increase the range of programming languages to which slicing can be applied. ORBS supports this by reducing the problem to that of generalizing how semantics are captured. Taking Picture Description Languages as a case study, the challenges and effectiveness of such a generalization are considered. The results show that not only is it possible to generalize the ORBS algorithm, but the resulting slicer is quite effective removing from 27% to 98% of the original source code with an average of 85%. Finally a qualitative look at the slices finds the technique very effective, at times producing minimal slices.},
	Author = {S. Yoo and D. Binkley and R. Eastman},
	Booktitle = {2014 IEEE 14th International Working Conference on Source Code Analysis and Manipulation},
	Date-Added = {2017-06-29 09:10:31 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1109/SCAM.2014.26},
	Keywords = {ORBS;Program Slicing;Picture Description Language},
	Month = {Sept},
	Pages = {175-184},
	Title = {Seeing Is Slicing: Observation Based Slicing of Picture Description Languages},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWW9vMjAxNGFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KWW9vMjAxNGFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6WW9vMjAxNGFhMAAADgAWAAoAWQBvAG8AMgAwADEANABhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1lvbzIwMTRhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SCAM.2014.26}}

@article{Harman:2012aa,
	Acmid = {2379787},
	Address = {New York, NY, USA},
	Articleno = {11},
	Author = {Harman, Mark and Mansouri, S. Afshin and Zhang, Yuanyuan},
	Date-Added = {2017-06-29 09:09:34 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2379776.2379787},
	Issn = {0360-0300},
	Issue_Date = {November 2012},
	Journal = {ACM Comput. Surv.},
	Keywords = {SBSE},
	Month = dec,
	Number = {1},
	Numpages = {61},
	Pages = {11:1--11:61},
	Publisher = {ACM},
	Title = {Search-based Software Engineering: Trends, Techniques and Applications},
	Url = {http://doi.acm.org/10.1145/2379776.2379787},
	Volume = {45},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAxMmFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NSGFybWFuMjAxMmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6SGFybWFuMjAxMmFhMAAOABwADQBIAGEAcgBtAGEAbgAyADAAMQAyAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGFybWFuMjAxMmFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2379776.2379787},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2379776.2379787}}

@inproceedings{Mao:2016aa,
	Acmid = {2931054},
	Address = {New York, NY, USA},
	Author = {Mao, Ke and Harman, Mark and Jia, Yue},
	Booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
	Date-Added = {2017-06-29 09:08:53 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2931037.2931054},
	Isbn = {978-1-4503-4390-9},
	Keywords = {Android, SBSE, Test Generation, Sapienz},
	Location = {Saarbr\&\#252;cken, Germany},
	Numpages = {12},
	Pages = {94--105},
	Publisher = {ACM},
	Series = {ISSTA 2016},
	Title = {Sapienz: Multi-objective Automated Testing for Android Applications},
	Url = {http://doi.acm.org/10.1145/2931037.2931054},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWFvMjAxNmFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KTWFvMjAxNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TWFvMjAxNmFhMAAADgAWAAoATQBhAG8AMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL01hbzIwMTZhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2931037.2931054},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2931037.2931054}}

@inproceedings{Panichella:2015aa,
	Abstract = {Test data generation has been extensively investigated as a search problem, where the search goal is to maximize the number of covered program elements (e.g., branches). Recently, the whole suite approach, which combines the fitness functions of single branches into an aggregate, test suite-level fitness, has been demonstrated to be superior to the traditional single-branch at a time approach. In this paper, we propose to consider branch coverage directly as a many-objective optimization problem, instead of aggregating multiple objectives into a single value, as in the whole suite approach. Since programs may have hundreds of branches (objectives), traditional many-objective algorithms that are designed for numerical optimization problems with less than 15 objectives are not applicable. Hence, we introduce a novel highly scalable many-objective genetic algorithm, called MOSA (Many-Objective Sorting Algorithm), suitably defined for the many- objective branch coverage problem. Results achieved on 64 Java classes indicate that the proposed many-objective algorithm is significantly more effective and more efficient than the whole suite approach. In particular, effectiveness (coverage) was significantly improved in 66% of the subjects and efficiency (search budget consumed) was improved in 62% of the subjects on which effectiveness remains the same.},
	Author = {A. Panichella and F. M. Kifetew and P. Tonella},
	Booktitle = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
	Date-Added = {2017-06-29 09:08:25 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/ICST.2015.7102604},
	Issn = {2159-4848},
	Keywords = {Evolutionary Testing; Multi-objective Optimization; Branch Coverage},
	Month = {April},
	Pages = {1-10},
	Title = {Reformulating Branch Coverage as a Many-Objective Optimization Problem},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvUGFuaWNoZWxsYTIwMTVhYTDSFwsYGVdOUy5kYXRhTxEBjAAAAAABjAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EVBhbmljaGVsbGEyMDE1YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBILzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlBhbmljaGVsbGEyMDE1YWEwAA4AJAARAFAAYQBuAGkAYwBoAGUAbABsAGEAMgAwADEANQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1BhbmljaGVsbGEyMDE1YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2gDfAOcCdwJ5An4CiQKSAqACpAKrArQCuQLGAskC2wLeAuMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC5Q==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICST.2015.7102604}}

@inproceedings{Desai:2016aa,
	Abstract = {Interacting with computers is a ubiquitous activity for millions of people. Repetitive or specialized tasks often require creation of small, often one-off, programs. End-users struggle with learning and using the myriad of domain-specific languages (DSLs) to effectively accomplish these tasks. We present a general framework for constructing program synthesizers that take natural language (NL) inputs and produce expressions in a target DSL. The framework takes as input a DSL definition and training data consisting of NL/DSL pairs. From these it constructs a synthesizer by learning optimal weights and classifiers (using NLP features) that rank the outputs of a keyword-programming based translation. We applied our framework to three domains: repetitive text editing, an intelligent tutoring system, and flight information queries. On 1200+ English descriptions, the respective synthesizers rank the desired program as the top-1 and top-3 for 80% and 90% descriptions respectively.},
	Author = {A. Desai and S. Gulwani and V. Hingorani and N. Jain and A. Karkare and M. Marron and S. R and S. Roy},
	Booktitle = {2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)},
	Date-Added = {2017-06-29 09:07:47 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2884781.2884786},
	Keywords = {Program Synthesis; Natural Language},
	Month = {May},
	Pages = {345-356},
	Title = {Program Synthesis Using Natural Language},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRGVzYWkyMDE2YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxEZXNhaTIwMTZhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpEZXNhaTIwMTZhYTAAAA4AGgAMAEQAZQBzAGEAaQAyADAAMQA2AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRGVzYWkyMDE2YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2884781.2884786}}

@article{Blei:2012aa,
	Acmid = {2133826},
	Address = {New York, NY, USA},
	Author = {Blei, David M.},
	Date-Added = {2017-06-29 09:07:11 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2133806.2133826},
	Issn = {0001-0782},
	Issue_Date = {April 2012},
	Journal = {Commun. ACM},
	Keywords = {Probabilistic Latent Semantic Indexing (PLSA)},
	Month = apr,
	Number = {4},
	Numpages = {8},
	Pages = {77--84},
	Publisher = {ACM},
	Title = {Probabilistic Topic Models},
	Url = {http://doi.acm.org/10.1145/2133806.2133826},
	Volume = {55},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmxlaTIwMTJhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0JsZWkyMDEyYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJsZWkyMDEyYWEwAA4AGAALAEIAbABlAGkAMgAwADEAMgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0JsZWkyMDEyYWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2133806.2133826},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2133806.2133826}}

@inproceedings{Binkley:2015aa,
	Abstract = {Observation-based slicing is a recently-introduced, language-independent slicing technique based on the dependencies observable from program behaviour. Due to the well-known limits of dynamic analysis, we may only compute an under-approximation of the true observation-based slice. However, because the observation-based slice captures all possible dependence that can be observed, even such approximations can yield insight into the limitations of static slicing. For example, a static slice, S, that is strictly smaller than the corresponding observation based slice is potentially unsafe. We present the results of three sets of experiments on 12 different programs, including benchmarks and larger programs, which investigate the relationship between static and observation-based slicing. We show that, in extreme cases, observation-based slices can find the true minimal static slice, where static techniques cannot. For more typical cases, our results illustrate the potential for observation-based slicing to highlight limitations in static slicers. Finally, we report on the sensitivity of observation-based slicing to test quality.},
	Author = {D. Binkley and N. Gold and M. Harman and S. Islam and J. Krinke and S. Yoo},
	Booktitle = {2015 IEEE 15th International Working Conference on Source Code Analysis and Manipulation (SCAM)},
	Date-Added = {2017-06-29 09:06:25 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1109/SCAM.2015.7335396},
	Keywords = {ORBS; Program Slicing},
	Month = {Sept},
	Pages = {1-10},
	Title = {ORBS and the limits of static slicing},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmlua2xleTIwMTVhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkJpbmtsZXkyMDE1YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJpbmtsZXkyMDE1YWEwAAAOAB4ADgBCAGkAbgBrAGwAZQB5ADIAMAAxADUAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9CaW5rbGV5MjAxNWFhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SCAM.2015.7335396}}

@inproceedings{Binkley:2014aa,
	Acmid = {2635893},
	Address = {New York, NY, USA},
	Author = {Binkley, David and Gold, Nicolas and Harman, Mark and Islam, Syed and Krinke, Jens and Yoo, Shin},
	Booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
	Date-Added = {2017-06-29 09:05:22 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2635868.2635893},
	Isbn = {978-1-4503-3056-5},
	Keywords = {ORBS},
	Location = {Hong Kong, China},
	Numpages = {12},
	Pages = {109--120},
	Publisher = {ACM},
	Series = {FSE 2014},
	Title = {ORBS: Language-independent Program Slicing},
	Url = {http://doi.acm.org/10.1145/2635868.2635893},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmlua2xleTIwMTRhYTHSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkJpbmtsZXkyMDE0YWExAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJpbmtsZXkyMDE0YWExAAAOAB4ADgBCAGkAbgBrAGwAZQB5ADIAMAAxADQAYQBhADEADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9CaW5rbGV5MjAxNGFhMQAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2635868.2635893},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2635868.2635893}}

@incollection{Hoffman:2010aa,
	Author = {Matthew Hoffman and Francis R. Bach and David M. Blei},
	Booktitle = {Advances in Neural Information Processing Systems 23},
	Date-Added = {2017-06-29 09:04:45 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Editor = {J. D. Lafferty and C. K. I. Williams and J. Shawe-Taylor and R. S. Zemel and A. Culotta},
	Keywords = {Latent Dirichlet Allocation (LDA)},
	Pages = {856--864},
	Publisher = {Curran Associates, Inc.},
	Title = {Online Learning for Latent Dirichlet Allocation},
	Url = {http://papers.nips.cc/paper/3902-online-learning-for-latent-dirichlet-allocation.pdf},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSG9mZm1hbjIwMTBhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DkhvZmZtYW4yMDEwYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkhvZmZtYW4yMDEwYWEwAAAOAB4ADgBIAG8AZgBmAG0AYQBuADIAMAAxADAAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9Ib2ZmbWFuMjAxMGFhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {http://papers.nips.cc/paper/3902-online-learning-for-latent-dirichlet-allocation.pdf}}

@inproceedings{Hindle:2012aa,
	Abstract = {Natural languages like English are rich, complex, and powerful. The highly creative and graceful use of languages like English and Tamil, by masters like Shakespeare and Avvaiyar, can certainly delight and inspire. But in practice, given cognitive constraints and the exigencies of daily life, most human utterances are far simpler and much more repetitive and predictable. In fact, these utterances can be very usefully modeled using modern statistical methods. This fact has led to the phenomenal success of statistical approaches to speech recognition, natural language translation, question-answering, and text mining and comprehension. We begin with the conjecture that most software is also natural, in the sense that it is created by humans at work, with all the attendant constraints and limitations - and thus, like natural language, it is also likely to be repetitive and predictable. We then proceed to ask whether a) code can be usefully modeled by statistical language models and b) such models can be leveraged to support software engineers. Using the widely adopted n-gram model, we provide empirical evidence supportive of a positive answer to both these questions. We show that code is also very repetitive, and in fact even more so than natural languages. As an example use of the model, we have developed a simple code completion engine for Java that, despite its simplicity, already improves Eclipse's built-in completion capability. We conclude the paper by laying out a vision for future research in this area.},
	Author = {A. Hindle and E. T. Barr and Z. Su and M. Gabel and P. Devanbu},
	Booktitle = {2012 34th International Conference on Software Engineering (ICSE)},
	Date-Added = {2017-06-29 09:04:10 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/ICSE.2012.6227135},
	Issn = {0270-5257},
	Keywords = {Language Model; Natural Language; Code Completion},
	Month = {June},
	Pages = {837-847},
	Title = {On the naturalness of software},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGluZGxlMjAxMmFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NSGluZGxlMjAxMmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6SGluZGxlMjAxMmFhMAAOABwADQBIAGkAbgBkAGwAZQAyADAAMQAyAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGluZGxlMjAxMmFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSE.2012.6227135}}

@inbook{Arun:2010aa,
	Address = {Berlin, Heidelberg},
	Author = {Arun, R. and Suresh, V. and Veni Madhavan, C. E. and Narasimha Murthy, M. N.},
	Booktitle = {Advances in Knowledge Discovery and Data Mining: 14th Pacific-Asia Conference, PAKDD 2010, Hyderabad, India, June 21-24, 2010. Proceedings. Part I},
	Date-Added = {2017-06-29 09:03:22 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1007/978-3-642-13657-3_43},
	Editor = {Zaki, Mohammed J. and Yu, Jeffrey Xu and Ravindran, B. and Pudi, Vikram},
	Isbn = {978-3-642-13657-3},
	Keywords = {Latent Dirichlet Allocation (LDA)},
	Pages = {391--402},
	Publisher = {Springer Berlin Heidelberg},
	Title = {On Finding the Natural Number of Topics with Latent Dirichlet Allocation: Some Observations},
	Url = {http://dx.doi.org/10.1007/978-3-642-13657-3_43},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQXJ1bjIwMTBhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0FydW4yMDEwYWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkFydW4yMDEwYWEwAA4AGAALAEEAcgB1AG4AMgAwADEAMABhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0FydW4yMDEwYWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-642-13657-3_43}}

@inproceedings{Lawrie:2010aa,
	Abstract = {Information Retrieval (IR) based tools complement traditional static and dynamic analysis tools by exploiting the natural language found within a program's text. Tools incorporating IR have tackled problems, such as feature location, that previously required considerable human effort. However, to reap the full benefit of IR-based techniques, the language used across all software artifacts (e.g., requirement and design documents, test plans, as well as the source code) must be consistent. Vocabulary normalization aligns the vocabulary found in source code with that found in other software artifacts. Normalization both splits an identifier into its constituent parts and expands each part into a full dictionary word to match vocabulary in other artifacts. An algorithm for normalization is presented. Its current implementation incorporates a greatly improved splitter that exploits a collection of resources including several dictionaries, frequency distributions derived from the corpus of programs, and co-occurrence data. Empirical study of this new splitter, GenTest, on almost 8000 identifiers finds that it correctly splits 82%, outperforming the current state-of-the-art. A preliminary experiment with the normalization algorithm finds it improving the FLAT ̂ 3 feature locator's scores of relevant code from 0.60 to 0.95 on a scale from 0 to 1.},
	Author = {D. Lawrie and D. Binkley and C. Morrell},
	Booktitle = {2010 17th Working Conference on Reverse Engineering},
	Date-Added = {2017-06-29 09:02:34 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/WCRE.2010.10},
	Issn = {1095-1350},
	Keywords = {Natural Language; Vocabulary Normalization;},
	Month = {Oct},
	Pages = {3-12},
	Title = {Normalizing Source Code Vocabulary},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTGF3cmllMjAxMGFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NTGF3cmllMjAxMGFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TGF3cmllMjAxMGFhMAAOABwADQBMAGEAdwByAGkAZQAyADAAMQAwAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTGF3cmllMjAxMGFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/WCRE.2010.10}}

@inproceedings{Heule:2015aa,
	Acmid = {2786875},
	Address = {New York, NY, USA},
	Author = {Heule, Stefan and Sridharan, Manu and Chandra, Satish},
	Booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-06-29 09:01:31 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2786805.2786875},
	Isbn = {978-1-4503-3675-8},
	Keywords = {Opaque Code; Markov Chain Monte Carlo (MCMC); Program Synthesis; JavaScript},
	Location = {Bergamo, Italy},
	Numpages = {11},
	Pages = {710--720},
	Publisher = {ACM},
	Series = {ESEC/FSE 2015},
	Title = {Mimic: Computing Models for Opaque Code},
	Url = {http://doi.acm.org/10.1145/2786805.2786875},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGV1bGUyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxIZXVsZTIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpIZXVsZTIwMTVhYTAAAA4AGgAMAEgAZQB1AGwAZQAyADAAMQA1AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSGV1bGUyMDE1YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2786805.2786875},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2786805.2786875}}

@inproceedings{Carzaniga:2015aa,
	Acmid = {2818776},
	Address = {Piscataway, NJ, USA},
	Author = {Carzaniga, Antonio and Mattavelli, Andrea and Pezz\`{e}, Mauro},
	Booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 1},
	Date-Added = {2017-06-29 09:00:58 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Isbn = {978-1-4799-1934-5},
	Keywords = {Software Redundancy},
	Location = {Florence, Italy},
	Numpages = {11},
	Pages = {156--166},
	Publisher = {IEEE Press},
	Series = {ICSE '15},
	Title = {Measuring Software Redundancy},
	Url = {http://dl.acm.org/citation.cfm?id=2818754.2818776},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2FyemFuaWdhMjAxNWFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QQ2FyemFuaWdhMjAxNWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6Q2FyemFuaWdhMjAxNWFhMAAADgAiABAAQwBhAHIAegBhAG4AaQBnAGEAMgAwADEANQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0NhcnphbmlnYTIwMTVhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=2818754.2818776}}

@inproceedings{Sidiroglou-Douskos:2011aa,
	Acmid = {2025133},
	Address = {New York, NY, USA},
	Author = {Sidiroglou-Douskos, Stelios and Misailovic, Sasa and Hoffmann, Henry and Rinard, Martin},
	Booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
	Date-Added = {2017-06-29 08:59:51 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2025113.2025133},
	Isbn = {978-1-4503-0443-6},
	Keywords = {Loop Perforation},
	Location = {Szeged, Hungary},
	Numpages = {11},
	Pages = {124--134},
	Publisher = {ACM},
	Series = {ESEC/FSE '11},
	Title = {Managing Performance vs. Accuracy Trade-offs with Loop Perforation},
	Url = {http://doi.acm.org/10.1145/2025113.2025133},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QUS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU2lkaXJvZ2xvdS1Eb3Vza29zMjAxMWFhMNIXCxgZV05TLmRhdGFPEQGsAAAAAAGsAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8ZU2lkaXJvZ2xvdS1Eb3Vza29zMjAxMWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAFAvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6U2lkaXJvZ2xvdS1Eb3Vza29zMjAxMWFhMAAOADQAGQBTAGkAZABpAHIAbwBnAGwAbwB1AC0ARABvAHUAcwBrAG8AcwAyADAAMQAxAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIATlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU2lkaXJvZ2xvdS1Eb3Vza29zMjAxMWFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOAOIA5wDvAp8CoQKmArECugLIAswC0wLcAuEC7gLxAwMDBgMLAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAw0=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2025113.2025133},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2025113.2025133}}

@inproceedings{Wen:2016aa,
	Abstract = {Various information retrieval (IR) based techniques have been proposed recently to locate bugs automatically at the file level. However, their usefulness is often compromised by the coarse granularity of files and the lack of contextual information. To address this, we propose to locate bugs using software changes, which offer finer granularity than files and provide important contextual clues for bug-fixing. We observe that bug inducing changes can facilitate the bug fixing process. For example, it helps triage the bug fixing task to the developers who committed the bug inducing changes or enables developers to fix bugs by reverting these changes. Our study further identifies that change logs and the naturally small granularity of changes can help boost the performance of IR-based bug localization. Motivated by these observations, we propose an IR-based approach Locus to locate bugs from software changes, and evaluate it on six large open source projects. The results show that Locus outperforms existing techniques at the source file level localization significantly. MAP and MRR in particular have been improved, on average, by 20.1% and 20.5%, respectively. Locus is also capable of locating the inducing changes within top 5 for 41.0% of the bugs. The results show that Locus can significantly reduce the number of lines needing to be scanned to locate the bug compared with existing techniques.},
	Author = {M. Wen and R. Wu and S. C. Cheung},
	Booktitle = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
	Date-Added = {2017-06-29 08:59:26 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Keywords = {Information Retrieval; Fault Localization; Locus},
	Month = {Sept},
	Pages = {262-273},
	Title = {Locus: Locating bugs from software changes},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2VuMjAxNmFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KV2VuMjAxNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6V2VuMjAxNmFhMAAADgAWAAoAVwBlAG4AMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1dlbjIwMTZhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==}}

@inproceedings{Weimer:2013aa,
	Acmid = {3107702},
	Address = {Piscataway, NJ, USA},
	Author = {Weimer, Westley and Fry, Zachary P. and Forrest, Stephanie},
	Booktitle = {Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering},
	Date-Added = {2017-06-29 08:58:34 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1109/ASE.2013.6693094},
	Isbn = {978-1-4799-0215-6},
	Keywords = {Automated Program Repair, Mutation Testing, Program Equivalence, SBSE},
	Location = {Silicon Valley, CA, USA},
	Numpages = {11},
	Pages = {356--366},
	Publisher = {IEEE Press},
	Series = {ASE'13},
	Title = {Leveraging Program Equivalence for Adaptive Program Repair: Models and First Results},
	Url = {https://doi.org/10.1109/ASE.2013.6693094},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2VpbWVyMjAxM2FhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NV2VpbWVyMjAxM2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6V2VpbWVyMjAxM2FhMAAOABwADQBXAGUAaQBtAGUAcgAyADAAMQAzAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2VpbWVyMjAxM2FhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {https://doi.org/10.1109/ASE.2013.6693094},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/ASE.2013.6693094}}

@inproceedings{Xuan:2014aa,
	Abstract = {Fault localization is an inevitable step in software debugging. Spectrum-based fault localization consists in computing a ranking metric on execution traces to identify faulty source code. Existing empirical studies on fault localization show that there is no optimal ranking metric for all faults in practice. In this paper, we propose Multric, a learning-based approach to combining multiple ranking metrics for effective fault localization. In Multric, a suspiciousness score of a program entity is a combination of existing ranking metrics. Multric consists two major phases: learning and ranking. Based on training faults, Multric builds a ranking model by learning from pairs of faulty and non-faulty source code elements. When a new fault appears, Multric computes the final ranking with the learned model. Experiments are conducted on 5386 seeded faults in ten open-source Java programs. We empirically compare Multric against four widely-studied metrics and three recently-proposed one. Our experimental results show that Multric localizes faults more effectively than state-of-art metrics, such as Tarantula, Ochiai, and Ample.},
	Author = {J. Xuan and M. Monperrus},
	Booktitle = {2014 IEEE International Conference on Software Maintenance and Evolution},
	Date-Added = {2017-06-29 08:57:56 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1109/ICSME.2014.41},
	Issn = {1063-6773},
	Keywords = {Fault Localization; Multric},
	Month = {Sept},
	Pages = {191-200},
	Title = {Learning to Combine Multiple Ranking Metrics for Fault Localization},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWHVhbjIwMTRhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C1h1YW4yMDE0YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlh1YW4yMDE0YWEwAA4AGAALAFgAdQBhAG4AMgAwADEANABhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1h1YW4yMDE0YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSME.2014.41}}

@inproceedings{Jia:2015aa,
	Abstract = {The surge of search based software engineering research has been hampered by the need to develop customized search algorithms for different classes of the same problem. For instance, two decades of bespoke Combinatorial Interaction Testing (CIT) algorithm development, our exemplar problem, has left software engineers with a bewildering choice of CIT techniques, each specialized for a particular task. This paper proposes the use of a single hyperheuristic algorithm that learns search strategies across a broad range of problem instances, providing a single generalist approach. We have developed a Hyperheuristic algorithm for CIT, and report experiments that show that our algorithm competes with known best solutions across constrained and unconstrained problems: For all 26 real-world subjects, it equals or outperforms the best result previously reported in the literature. We also present evidence that our algorithm's strong generic performance results from its unsupervised learning. Hyperheuristic search is thus a promising way to relocate CIT design intelligence from human to machine.},
	Author = {Y. Jia and M. B. Cohen and M. Harman and J. Petke},
	Booktitle = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
	Date-Added = {2017-06-29 08:57:15 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/ICSE.2015.71},
	Issn = {0270-5257},
	Keywords = {Combinatorial Interaction Testing (CIT); Hyperheuristic Search (HS)},
	Month = {May},
	Pages = {540-550},
	Title = {Learning Combinatorial Interaction Test Generation Strategies Using Hyperheuristic Search},
	Volume = {1},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvSmlhMjAxNWFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KSmlhMjAxNWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6SmlhMjAxNWFhMAAADgAWAAoASgBpAGEAMgAwADEANQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0ppYTIwMTVhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSE.2015.71}}

@inproceedings{Wei:2006aa,
	Acmid = {1148204},
	Address = {New York, NY, USA},
	Author = {Wei, Xing and Croft, W. Bruce},
	Booktitle = {Proceedings of the 29th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval},
	Date-Added = {2017-06-29 08:56:27 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1145/1148170.1148204},
	Isbn = {1-59593-369-7},
	Keywords = {Information Retrieval; Language Model; Latent Dirichlet Allocation (LDA)},
	Location = {Seattle, Washington, USA},
	Numpages = {8},
	Pages = {178--185},
	Publisher = {ACM},
	Series = {SIGIR '06},
	Title = {LDA-based Document Models for Ad-hoc Retrieval},
	Url = {http://doi.acm.org/10.1145/1148170.1148204},
	Year = {2006},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2VpMjAwNmFhMNIXCxgZV05TLmRhdGFPEQFyAAAAAAFyAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8KV2VpMjAwNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEEvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6V2VpMjAwNmFhMAAADgAWAAoAVwBlAGkAMgAwADAANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAD9Vc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1dlaTIwMDZhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A0wDYAOACVgJYAl0CaAJxAn8CgwKKApMCmAKlAqgCugK9AsIAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxA==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1148170.1148204},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1148170.1148204}}

@inproceedings{Marinescu:2013aa,
	Acmid = {2491438},
	Address = {New York, NY, USA},
	Author = {Marinescu, Paul Dan and Cadar, Cristian},
	Booktitle = {Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-06-29 08:53:43 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2491411.2491438},
	Isbn = {978-1-4503-2237-9},
	Keywords = {Software Testing, Symbolic Execution; KATCH},
	Location = {Saint Petersburg, Russia},
	Numpages = {11},
	Pages = {235--245},
	Publisher = {ACM},
	Series = {ESEC/FSE 2013},
	Title = {KATCH: High-coverage Testing of Software Patches},
	Url = {http://doi.acm.org/10.1145/2491411.2491438},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWFyaW5lc2N1MjAxM2FhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QTWFyaW5lc2N1MjAxM2FhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TWFyaW5lc2N1MjAxM2FhMAAADgAiABAATQBhAHIAaQBuAGUAcwBjAHUAMgAwADEAMwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL01hcmluZXNjdTIwMTNhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2491411.2491438},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2491411.2491438}}

@inproceedings{Smith:2015aa,
	Acmid = {2786825},
	Address = {New York, NY, USA},
	Author = {Smith, Edward K. and Barr, Earl T. and Le Goues, Claire and Brun, Yuriy},
	Booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-06-29 08:53:11 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2786805.2786825},
	Isbn = {978-1-4503-3675-8},
	Keywords = {GenProg, Automated Program Repair; TrpAutoRepair,},
	Location = {Bergamo, Italy},
	Numpages = {12},
	Pages = {532--543},
	Publisher = {ACM},
	Series = {ESEC/FSE 2015},
	Title = {Is the Cure Worse Than the Disease? Overfitting in Automated Program Repair},
	Url = {http://doi.acm.org/10.1145/2786805.2786825},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU21pdGgyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxTbWl0aDIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpTbWl0aDIwMTVhYTAAAA4AGgAMAFMAbQBpAHQAaAAyADAAMQA1AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU21pdGgyMDE1YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2786805.2786825},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2786805.2786825}}

@inproceedings{Le:2015aa,
	Acmid = {2786880},
	Address = {New York, NY, USA},
	Author = {Le, Tien-Duy B. and Oentaryo, Richard J. and Lo, David},
	Booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-06-29 08:52:18 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2786805.2786880},
	Isbn = {978-1-4503-3675-8},
	Keywords = {Information Retrieval; Spectrum-based Fault Localization (SBFL)},
	Location = {Bergamo, Italy},
	Numpages = {12},
	Pages = {579--590},
	Publisher = {ACM},
	Series = {ESEC/FSE 2015},
	Title = {Information Retrieval and Spectrum Based Bug Localization: Better Together},
	Url = {http://doi.acm.org/10.1145/2786805.2786880},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTGUyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAWwAAAAAAWwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wlMZTIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpMZTIwMTVhYTAADgAUAAkATABlADIAMAAxADUAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgA+VXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9MZTIwMTVhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDSANcA3wJPAlECVgJhAmoCeAJ8AoMCjAKRAp4CoQKzArYCuwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAK9},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2786805.2786880},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2786805.2786880}}

@inproceedings{Weimer:2009aa,
	Acmid = {1555051},
	Address = {Washington, DC, USA},
	Author = {Weimer, Westley and Nguyen, ThanhVu and Le Goues, Claire and Forrest, Stephanie},
	Booktitle = {Proceedings of the 31st International Conference on Software Engineering},
	Date-Added = {2017-06-29 08:49:12 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1109/ICSE.2009.5070536},
	Isbn = {978-1-4244-3453-4},
	Keywords = {Genetic Programming (GP); Automatic Program Repair},
	Numpages = {11},
	Pages = {364--374},
	Publisher = {IEEE Computer Society},
	Series = {ICSE '09},
	Title = {Automatically Finding Patches Using Genetic Programming},
	Url = {http://dx.doi.org/10.1109/ICSE.2009.5070536},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2VpbWVyMjAwOWFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NV2VpbWVyMjAwOWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6V2VpbWVyMjAwOWFhMAAOABwADQBXAGUAaQBtAGUAcgAyADAAMAA5AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvV2VpbWVyMjAwOWFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSE.2009.5070536}}

@article{Krall:2015aa,
	Abstract = {Multi-objective evolutionary algorithms (MOEAs) help software engineers find novel solutions to complex problems. When automatic tools explore too many options, they are slow to use and hard to comprehend. GALE is a near-linear time MOEA that builds a piecewise approximation to the surface of best solutions along the Pareto frontier. For each piece, GALE mutates solutions towards the better end. In numerous case studies, GALE finds comparable solutions to standard methods (NSGA-II, SPEA2) using far fewer evaluations (e.g. 20 evaluations, not 1,000). GALE is recommended when a model is expensive to evaluate, or when some audience needs to browse and understand how an MOEA has made its conclusions.},
	Author = {J. Krall and T. Menzies and M. Davies},
	Date-Added = {2017-06-29 08:48:33 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/TSE.2015.2432024},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {GALE; Multi-objective Optimization; SBSE; Active Learning},
	Month = {Oct},
	Number = {10},
	Pages = {1001-1018},
	Title = {GALE: Geometric Active Learning for Search-Based Software Engineering},
	Volume = {41},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvS3JhbGwyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxLcmFsbDIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpLcmFsbDIwMTVhYTAAAA4AGgAMAEsAcgBhAGwAbAAyADAAMQA1AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvS3JhbGwyMDE1YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2015.2432024}}

@article{Griffiths:2004aa,
	Abstract = {A first step in identifying the content of a document is determining which topics that document addresses. We describe a generative model for documents, introduced by Blei, Ng, and Jordan [Blei, D. M., Ng, A. Y. &amp; Jordan, M. I. (2003) J. Machine Learn. Res. 3, 993-1022], in which each document is generated by choosing a distribution over topics and then choosing each word in the document from a topic selected according to this distribution. We then present a Markov chain Monte Carlo algorithm for inference in this model. We use this algorithm to analyze abstracts from PNAS by using Bayesian model selection to establish the number of topics. We show that the extracted topics capture meaningful structure in the data, consistent with the class designations provided by the authors of the articles, and outline further applications of this analysis, including identifying ``hot topics'' by examining temporal dynamics and tagging abstracts to illustrate semantic content.},
	Author = {Griffiths, Thomas L. and Steyvers, Mark},
	Date-Added = {2017-06-29 08:47:31 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1073/pnas.0307752101},
	Eprint = {http://www.pnas.org/content/101/suppl_1/5228.full.pdf},
	Journal = {Proceedings of the National Academy of Sciences},
	Keywords = {Latent Semantic Indexing (LSI)},
	Number = {suppl 1},
	Pages = {5228-5235},
	Title = {Finding scientific topics},
	Url = {http://www.pnas.org/content/101/suppl_1/5228.abstract},
	Volume = {101},
	Year = {2004},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvR3JpZmZpdGhzMjAwNGFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QR3JpZmZpdGhzMjAwNGFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6R3JpZmZpdGhzMjAwNGFhMAAADgAiABAARwByAGkAZgBmAGkAdABoAHMAMgAwADAANABhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0dyaWZmaXRoczIwMDRhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {http://www.pnas.org/content/101/suppl_1/5228.abstract},
	Bdsk-Url-2 = {http://dx.doi.org/10.1073/pnas.0307752101}}

@article{Shalev-Shwartz:2017aa,
	Abstract = {In recent years, Deep Learning has become the go-to solution for a broad range of applications, often outperforming state-of-the-art. However, it is important, for both theoreticians and practitioners, to gain a deeper understanding of the difficulties and limitations associated with common approaches and algorithms. We describe four types of simple problems, for which the gradient-based algorithms commonly used in deep learning either fail or suffer from significant difficulties. We illustrate the failures through practical experiments, and provide theoretical insights explaining their source, and how they might be remedied.},
	Author = {Shai Shalev-Shwartz and Ohad Shamir and Shaked Shammah},
	Date-Added = {2017-06-29 08:46:20 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Eprint = {1703.07950},
	Keywords = {Deep Learning},
	Month = {03},
	Title = {Failures of Gradient-Based Deep Learning},
	Url = {https://arxiv.org/abs/1703.07950},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QTS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU2hhbGV2LVNod2FydHoyMDE3YWEw0hcLGBlXTlMuZGF0YU8RAZwAAAAAAZwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xVTaGFsZXYtU2h3YXJ0ejIwMTdhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIATC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpTaGFsZXYtU2h3YXJ0ejIwMTdhYTAADgAsABUAUwBoAGEAbABlAHYALQBTAGgAdwBhAHIAdAB6ADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBKVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9TaGFsZXYtU2h3YXJ0ejIwMTdhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDeAOMA6wKLAo0CkgKdAqYCtAK4Ar8CyALNAtoC3QLvAvIC9wAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAL5},
	Bdsk-Url-1 = {https://arxiv.org/abs/1703.07950}}

@article{Choi:2017aa,
	Abstract = {Detecting buffer overruns from a source code is one of the most common and yet challenging tasks in program analysis. Current approaches have mainly relied on rigid rules and handcrafted features devised by a few experts, limiting themselves in terms of flexible applicability and robustness due to diverse bug patterns and characteristics existing in sophisticated real-world software programs. In this paper, we propose a novel, data-driven approach that is completely end-to-end without requiring any hand-crafted features, thus free from any program language-specific structural limitations. In particular, our approach leverages a recently proposed neural network model called memory networks that have shown the state-of-the-art performances mainly in question-answering tasks. Our experimental results using source codes demonstrate that our proposed model is capable of accurately detecting simple buffer overruns. We also present in-depth analyses on how a memory network can learn to understand the semantics in programming languages solely from raw source codes, such as tracing variables of interest, identifying numerical values, and performing their quantitative comparisons.},
	Author = {Min-je Choi and Sehun Jeong and Hakjoo Oh and Jaegul Choo},
	Date-Added = {2017-06-29 08:44:28 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Eprint = {1703.02458},
	Keywords = {Buffer Overrun; Neural Network (NN);},
	Month = {03},
	Title = {End-to-End Prediction of Buffer Overruns from Raw Source Code via Neural Memory Networks},
	Url = {https://arxiv.org/abs/1703.02458},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2hvaTIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0Nob2kyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkNob2kyMDE3YWEwAA4AGAALAEMAaABvAGkAMgAwADEANwBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0Nob2kyMDE3YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {https://arxiv.org/abs/1703.02458}}

@inproceedings{Epitropakis:2015aa,
	Acmid = {2771788},
	Address = {New York, NY, USA},
	Author = {Epitropakis, Michael G. and Yoo, Shin and Harman, Mark and Burke, Edmund K.},
	Booktitle = {Proceedings of the 2015 International Symposium on Software Testing and Analysis},
	Date-Added = {2017-06-29 08:43:58 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/2771783.2771788},
	Isbn = {978-1-4503-3620-8},
	Keywords = {Test Case Prioritization; Multi-objective Evolutionary Algorithm; Additional Greedy Algorithm;Coverage Compaction},
	Location = {Baltimore, MD, USA},
	Numpages = {12},
	Pages = {234--245},
	Publisher = {ACM},
	Series = {ISSTA 2015},
	Title = {Empirical Evaluation of Pareto Efficient Multi-objective Regression Test Case Prioritisation},
	Url = {http://doi.acm.org/10.1145/2771783.2771788},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRXBpdHJvcGFraXMyMDE1YWEx0hcLGBlXTlMuZGF0YU8RAZIAAAAAAZIAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xJFcGl0cm9wYWtpczIwMTVhYTEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIASS86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpFcGl0cm9wYWtpczIwMTVhYTEAAA4AJgASAEUAcABpAHQAcgBvAHAAYQBrAGkAcwAyADAAMQA1AGEAYQAxAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAR1VzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRXBpdHJvcGFraXMyMDE1YWExAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANsA4ADoAn4CgAKFApACmQKnAqsCsgK7AsACzQLQAuIC5QLqAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAuw=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2771783.2771788},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2771783.2771788}}

@inproceedings{Su:2015aa,
	Abstract = {Metamorphic testing is an advanced technique to test programs without a true test oracle such as machine learning applications. Because these programs have no general oracle to identify their correctness, traditional testing techniques such as unit testing may not be helpful for developers to detect potential bugs. This paper presents a novel system, KABU, which can dynamically infer properties of methods' states in programs that describe the characteristics of a method before and after transforming its input. These Metamorphic Properties (MPs) are pivotal to detecting potential bugs in programs without test oracles, but most previous work relies solely on human effort to identify them and only considers MPs between input parameters and output result (return value) of a program or method. This paper also proposes a testing concept, Metamorphic Differential Testing (MDT). By detecting different sets of MPs between different versions for the same method, KABU reports potential bugs for human review. We have performed a preliminary evaluation of KABU by comparing the MPs detected by humans with the MPs detected by KABU. Our preliminary results are promising: KABU can find more MPs than human developers, and MDT is effective at detecting function changes in methods.},
	Author = {F. H. Su and J. Bell and C. Murphy and G. Kaiser},
	Booktitle = {2015 IEEE/ACM 10th International Workshop on Automation of Software Test},
	Date-Added = {2017-06-29 08:42:49 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/AST.2015.19},
	Keywords = {Metamorphic Testing;Kabu;Software Testing},
	Month = {May},
	Pages = {55-59},
	Title = {Dynamic Inference of Likely Metamorphic Properties to Support Differential Testing},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU3UyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAWwAAAAAAWwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wlTdTIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQC86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpTdTIwMTVhYTAADgAUAAkAUwB1ADIAMAAxADUAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgA+VXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9TdTIwMTVhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDSANcA3wJPAlECVgJhAmoCeAJ8AoMCjAKRAp4CoQKzArYCuwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAK9},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/AST.2015.19}}

@article{Alshahwan:2015aa,
	Abstract = {This work focuses on a specific front of the malware detection arms-race, namely the detection of persistent, disk-resident malware. We exploit normalised compression distance (NCD), an information theoretic measure, applied directly to binaries. Given a zoo of labelled malware and benign-ware, we ask whether a suspect program is more similar to our malware or to our benign-ware. Our approach classifies malware with 97.1% accuracy and a false positive rate of 3%. We achieve our results with off-the-shelf compressors and a standard machine learning classifier and without any specialised knowledge. An end-user need only collect a zoo of malware and benign-ware and then can immediately apply our techniques.},
	Author = {Nadia Alshahwan and Earl T. Barr and David Clark and George Danezis},
	Date-Added = {2017-06-29 08:42:10 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Eprint = {1502.07661},
	Keywords = {Malware Detection; Normalised Compression Distance (NCD)},
	Month = {02},
	Title = {Detecting Malware with Information Complexity},
	Url = {https://arxiv.org/abs/1502.07661},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQWxzaGFod2FuMjAxNWFhMNIXCxgZV05TLmRhdGFPEQGKAAAAAAGKAAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QQWxzaGFod2FuMjAxNWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEcvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6QWxzaGFod2FuMjAxNWFhMAAADgAiABAAQQBsAHMAaABhAGgAdwBhAG4AMgAwADEANQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEVVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0Fsc2hhaHdhbjIwMTVhYTAAABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A2QDeAOYCdAJ2AnsChgKPAp0CoQKoArECtgLDAsYC2ALbAuAAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAAC4g==},
	Bdsk-Url-1 = {https://arxiv.org/abs/1502.07661}}

@article{Calcagno:2009aa,
	Acmid = {1480917},
	Address = {New York, NY, USA},
	Author = {Calcagno, Cristiano and Distefano, Dino and O'Hearn, Peter and Yang, Hongseok},
	Date-Added = {2017-06-29 08:40:36 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/1594834.1480917},
	Issn = {0362-1340},
	Issue_Date = {January 2009},
	Journal = {SIGPLAN Not.},
	Keywords = {Bi-abduction, Program Analysis, Proof Theory},
	Month = jan,
	Number = {1},
	Numpages = {12},
	Pages = {289--300},
	Publisher = {ACM},
	Title = {Compositional Shape Analysis by Means of Bi-abduction},
	Url = {http://doi.acm.org/10.1145/1594834.1480917},
	Volume = {44},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQ2FsY2Fnbm8yMDA5YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9DYWxjYWdubzIwMDlhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpDYWxjYWdubzIwMDlhYTAADgAgAA8AQwBhAGwAYwBhAGcAbgBvADIAMAAwADkAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9DYWxjYWdubzIwMDlhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1594834.1480917},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1594834.1480917}}

@article{Ernst:2001aa,
	Abstract = {Explicitly stated program invariants can help programmers by identifying program properties that must be preserved when modifying code. In practice, however, these invariants are usually implicit. An alternative to expecting programmers to fully annotate code with invariants is to automatically infer likely invariants from the program itself. This research focuses on dynamic techniques for discovering invariants from execution traces. This article reports three results. First, it describes techniques for dynamically discovering invariants, along with an implementation, named Daikon, that embodies these techniques. Second, it reports on the application of Daikon to two sets of target programs. In programs from Gries's work (1981) on program derivation, the system rediscovered predefined invariants. In a C program lacking explicit invariants, the system discovered invariants that assisted a software evolution task. These experiments demonstrate that, at least for small programs, invariant inference is both accurate and useful. Third, it analyzes scalability issues, such as invariant detection runtime and accuracy, as functions of test suites and program points instrumented},
	Author = {M. D. Ernst and J. Cockrell and W. G. Griswold and D. Notkin},
	Date-Added = {2017-06-29 08:40:02 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/32.908957},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Daikon; Program Invariant;},
	Month = {Feb},
	Number = {2},
	Pages = {99-123},
	Title = {Dynamically discovering likely program invariants to support program evolution},
	Volume = {27},
	Year = {2001},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRXJuc3QyMDAxYWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxFcm5zdDIwMDFhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpFcm5zdDIwMDFhYTAAAA4AGgAMAEUAcgBuAHMAdAAyADAAMAAxAGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRXJuc3QyMDAxYWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/32.908957}}

@inproceedings{Dhar:2015aa,
	Acmid = {2786877},
	Address = {New York, NY, USA},
	Author = {Dhar, Aritra and Purandare, Rahul and Dhawan, Mohan and Rangaswamy, Suresh},
	Booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
	Date-Added = {2017-06-29 08:38:41 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2786805.2786877},
	Isbn = {978-1-4503-3675-8},
	Keywords = {Automatic Program Repair, Clotho},
	Location = {Bergamo, Italy},
	Numpages = {12},
	Pages = {555--566},
	Publisher = {ACM},
	Series = {ESEC/FSE 2015},
	Title = {CLOTHO: Saving Programs from Malformed Strings and Incorrect String-handling},
	Url = {http://doi.acm.org/10.1145/2786805.2786877},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvRGhhcjIwMTVhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0RoYXIyMDE1YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkRoYXIyMDE1YWEwAA4AGAALAEQAaABhAHIAMgAwADEANQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0RoYXIyMDE1YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2786805.2786877},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2786805.2786877}}

@inproceedings{Yadegari:2015aa,
	Abstract = {Malicious software are usually obfuscated to avoid detection and resist analysis. When new malware is encountered, such obfuscations have to be penetrated or removed ("deobfuscated") in order to understand the internal logic of the code and devise countermeasures. This paper discusses a generic approach for deobfuscation of obfuscated executable code. Our approach does not make any assumptions about the nature of the obfuscations used, but instead uses semantics-preserving program transformations to simplify away obfuscation code. We have applied a prototype implementation of our ideas to a variety of different kinds of obfuscation, including emulation-based obfuscation, emulation-based obfuscation with runtime code unpacking, and return-oriented programming. Our experimental results are encouraging and suggest that this approach can be effective in extracting the internal logic from code obfuscated using a variety of obfuscation techniques, including tools such as Themida that previous approaches could not handle.},
	Author = {B. Yadegari and B. Johannesmeyer and B. Whitely and S. Debray},
	Booktitle = {2015 IEEE Symposium on Security and Privacy},
	Date-Added = {2017-06-29 08:32:50 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Doi = {10.1109/SP.2015.47},
	Issn = {1081-6011},
	Keywords = {Deobfuscation; Virtualization-Obfuscation; Return Oriented Programming},
	Month = {May},
	Pages = {674-691},
	Title = {A Generic Approach to Automatic Deobfuscation of Executable Code},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWWFkZWdhcmkyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAYQAAAAAAYQAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w9ZYWRlZ2FyaTIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIARi86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpZYWRlZ2FyaTIwMTVhYTAADgAgAA8AWQBhAGQAZQBnAGEAcgBpADIAMAAxADUAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBEVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9ZYWRlZ2FyaTIwMTVhYTAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QJtAm8CdAJ/AogClgKaAqECqgKvArwCvwLRAtQC2QAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALb},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SP.2015.47}}

@misc{McMinn:2016aa,
	Abstract = {The Alternating Variable Method (AVM) has been shown to
be a fast and effective local search technique for search-based software
engineering. Recent improvements to the AVM have generalized the representations
it can optimize and have provably reduced its running time.
However, until now, there has been no general, publicly-available implementation
of the AVM incorporating all of these developments. We introduce
AVMf, an object-oriented Java framework that provides such an
implementation. AVMf is available from http://avmframework.org for
configuration and use in a wide variety of projects.},
	Author = {P.S. McMinn and G.M. Kapfhammer},
	Booktitle = {International Symposium on Search-Based Software Engineering (SSBSE 2016)},
	Date-Added = {2017-06-29 08:32:04 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Journal = {Search Based Software Engineering},
	Keywords = {Alternating Variable Method (AVM)},
	Month = {September},
	Note = {{\copyright} 2016 Springer International Publishing AG. This is an author produced version of a paper subsequently published in Lecture Notes in Computer Science. Uploaded in accordance with the publisher's self-archiving policy.},
	Publisher = {Springer International Publishing},
	Series = {Lecture Notes in Computer Science},
	Title = {AVMf: An Open-Source Framework and Implementation of the Alternating Variable Method},
	Url = {http://eprints.whiterose.ac.uk/104204/},
	Volume = {9962},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWNNaW5uMjAxNmFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NTWNNaW5uMjAxNmFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TWNNaW5uMjAxNmFhMAAOABwADQBNAGMATQBpAG4AbgAyADAAMQA2AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTWNNaW5uMjAxNmFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://eprints.whiterose.ac.uk/104204/}}

@inproceedings{Almaghairbe:2016aa,
	Abstract = {A key component of software testing is deciding whether a test case has passed or failed: an expensive and error-prone manual activity. We present an approach to automatically classify passing and failing executions using semi-supervised learning on dynamic execution data (test inputs/outputs and execution traces). A small proportion of the test data is labelled as passing or failing and used in conjunction with the unlabelled data to build a classifier which labels the remaining outputs (classify them as passing or failing tests). A range of learning algorithms are investigated using several faulty versions of three systems along with varying types of data (inputs/outputs alone, or in combination with execution traces) and different labelling strategies (both failing and passing tests, and passing tests alone). The results show that in many cases labelling just a small proportion of the test cases - as low as 10% - is sufficient to build a classifier that is able to correctly categorise the large majority of the remaining test cases. This has important practical potential: when checking the test results from a system a developer need only examine a small proportion of these and use this information to train a learning algorithm to automatically classify the remainder.},
	Author = {R. Almaghairbe and M. Roper},
	Booktitle = {2016 IEEE 27th International Symposium on Software Reliability Engineering (ISSRE)},
	Date-Added = {2017-06-29 08:30:45 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1109/ISSRE.2016.22},
	Keywords = {Semi-Supervised Learning; Test Classification},
	Month = {Oct},
	Pages = {116-126},
	Title = {Automatically Classifying Test Results by Semi-Supervised Learning},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQWxtYWdoYWlyYmUyMDE2YWEw0hcLGBlXTlMuZGF0YU8RAZIAAAAAAZIAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xJBbG1hZ2hhaXJiZTIwMTZhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIASS86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpBbG1hZ2hhaXJiZTIwMTZhYTAAAA4AJgASAEEAbABtAGEAZwBoAGEAaQByAGIAZQAyADAAMQA2AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAR1VzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQWxtYWdoYWlyYmUyMDE2YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANsA4ADoAn4CgAKFApACmQKnAqsCsgK7AsACzQLQAuIC5QLqAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAuw=},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ISSRE.2016.22}}

@inproceedings{Murphy:2009aa,
	Acmid = {1572295},
	Address = {New York, NY, USA},
	Author = {Murphy, Christian and Shen, Kuang and Kaiser, Gail},
	Booktitle = {Proceedings of the Eighteenth International Symposium on Software Testing and Analysis},
	Date-Added = {2017-06-29 08:29:44 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/1572272.1572295},
	Isbn = {978-1-60558-338-9},
	Keywords = {Metamorphic Testing, Software Testing},
	Location = {Chicago, IL, USA},
	Numpages = {12},
	Pages = {189--200},
	Publisher = {ACM},
	Series = {ISSTA '09},
	Title = {Automatic System Testing of Programs Without Test Oracles},
	Url = {http://doi.acm.org/10.1145/1572272.1572295},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTXVycGh5MjAwOWFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NTXVycGh5MjAwOWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6TXVycGh5MjAwOWFhMAAOABwADQBNAHUAcgBwAGgAeQAyADAAMAA5AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvTXVycGh5MjAwOWFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1572272.1572295},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1572272.1572295}}

@inproceedings{Barr:2015aa,
	Acmid = {2771796},
	Address = {New York, NY, USA},
	Author = {Barr, Earl T. and Harman, Mark and Jia, Yue and Marginean, Alexandru and Petke, Justyna},
	Booktitle = {Proceedings of the 2015 International Symposium on Software Testing and Analysis},
	Date-Added = {2017-06-29 08:28:10 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2771783.2771796},
	Isbn = {978-1-4503-3620-8},
	Keywords = {Automated Software Transplantation,Genetic Improvement (GI)},
	Location = {Baltimore, MD, USA},
	Numpages = {13},
	Pages = {257--269},
	Publisher = {ACM},
	Series = {ISSTA 2015},
	Title = {Automated Software Transplantation},
	Url = {http://doi.acm.org/10.1145/2771783.2771796},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQmFycjIwMTVhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C0JhcnIyMDE1YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOkJhcnIyMDE1YWEwAA4AGAALAEIAYQByAHIAMgAwADEANQBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL0JhcnIyMDE1YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2771783.2771796},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2771783.2771796}}

@inproceedings{Yandrapally:2015aa,
	Acmid = {2818763},
	Address = {Piscataway, NJ, USA},
	Author = {Yandrapally, Rahulkrishna and Sridhara, Giriprasad and Sinha, Saurabh},
	Booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 1},
	Date-Added = {2017-06-29 08:27:23 +0000},
	Date-Modified = {2017-12-13 14:35:58 +0000},
	Isbn = {978-1-4799-1934-5},
	Keywords = {GUI; Test Case Modularization},
	Location = {Florence, Italy},
	Numpages = {11},
	Pages = {44--54},
	Publisher = {IEEE Press},
	Series = {ICSE '15},
	Title = {Automated Modularization of GUI Test Cases},
	Url = {http://dl.acm.org/citation.cfm?id=2818754.2818763},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWWFuZHJhcGFsbHkyMDE1YWEw0hcLGBlXTlMuZGF0YU8RAZIAAAAAAZIAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xJZYW5kcmFwYWxseTIwMTVhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIASS86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpZYW5kcmFwYWxseTIwMTVhYTAAAA4AJgASAFkAYQBuAGQAcgBhAHAAYQBsAGwAeQAyADAAMQA1AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAR1VzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvWWFuZHJhcGFsbHkyMDE1YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANsA4ADoAn4CgAKFApACmQKnAqsCsgK7AsACzQLQAuIC5QLqAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAuw=},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=2818754.2818763}}

@inbook{Sohn:2016aa,
	Address = {Cham},
	Author = {Sohn, Jeongju and Lee, Seongmin and Yoo, Shin},
	Booktitle = {Search Based Software Engineering: 8th International Symposium, SSBSE 2016, Raleigh, NC, USA, October 8-10, 2016, Proceedings},
	Date-Added = {2017-06-29 08:26:31 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1007/978-3-319-47106-8_14},
	Editor = {Sarro, Federica and Deb, Kalyanmoy},
	Isbn = {978-3-319-47106-8},
	Keywords = {Parameter Optimization; OpenCV; COINSE},
	Pages = {211--217},
	Publisher = {Springer International Publishing},
	Title = {Amortised Deep Parameter Optimisation of GPGPU Work Group Size for OpenCV},
	Url = {http://dx.doi.org/10.1007/978-3-319-47106-8_14},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QQy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU29objIwMTZhYTDSFwsYGVdOUy5kYXRhTxEBdAAAAAABdAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////C1NvaG4yMDE2YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBCLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlNvaG4yMDE2YWEwAA4AGAALAFMAbwBoAG4AMgAwADEANgBhAGEAMAAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEBVc2Vycy9zbWxlZS9Eb2N1bWVudHMvUmVzZWFyY2gvY29pbnNlLXdvcmtkaXIvUGFwZXJzL1NvaG4yMDE2YWEwABMAAS8AABUAAgAM//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A1ADZAOECWQJbAmACawJ0AoIChgKNApYCmwKoAqsCvQLAAsUAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAACxw==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-319-47106-8_14}}

@article{Salton:1975aa,
	Acmid = {361220},
	Address = {New York, NY, USA},
	Author = {Salton, G. and Wong, A. and Yang, C. S.},
	Date-Added = {2017-06-29 08:25:11 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1145/361219.361220},
	Issn = {0001-0782},
	Issue_Date = {Nov. 1975},
	Journal = {Commun. ACM},
	Keywords = {Automated Indexing; Vector Space Model(VSM)},
	Month = nov,
	Number = {11},
	Numpages = {8},
	Pages = {613--620},
	Publisher = {ACM},
	Title = {A Vector Space Model for Automatic Indexing},
	Url = {http://doi.acm.org/10.1145/361219.361220},
	Volume = {18},
	Year = {1975},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRS4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU2FsdG9uMTk3NWFhMNIXCxgZV05TLmRhdGFPEQF8AAAAAAF8AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8NU2FsdG9uMTk3NWFhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FSTwAFAAUAAAogY3UAAAAAAAAAAAAAAAAABlBhcGVycwACAEQvOlVzZXJzOnNtbGVlOkRvY3VtZW50czpSZXNlYXJjaDpjb2luc2Utd29ya2RpcjpQYXBlcnM6U2FsdG9uMTk3NWFhMAAOABwADQBTAGEAbAB0AG8AbgAxADkANwA1AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQlVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU2FsdG9uMTk3NWFhMAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANYA2wDjAmMCZQJqAnUCfgKMApAClwKgAqUCsgK1AscCygLPAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAtE=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/361219.361220},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/361219.361220}}

@inproceedings{B.-Le:2016aa,
	Acmid = {2931049},
	Address = {New York, NY, USA},
	Author = {B. Le, Tien-Duy and Lo, David and Le Goues, Claire and Grunske, Lars},
	Booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
	Date-Added = {2017-06-29 08:15:07 +0000},
	Date-Modified = {2017-12-13 14:35:56 +0000},
	Doi = {10.1145/2931037.2931049},
	Isbn = {978-1-4503-4390-9},
	Keywords = {Learning to Rank; Program Invariant; Automated Debugging; Savant;},
	Location = {Saarbr\&\#252;cken, Germany},
	Numpages = {12},
	Pages = {177--188},
	Publisher = {ACM},
	Series = {ISSTA 2016},
	Title = {A Learning-to-rank Based Fault Localization Approach Using Likely Invariants},
	Url = {http://doi.acm.org/10.1145/2931037.2931049},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRC4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQi4tTGUyMDE2YWEw0hcLGBlXTlMuZGF0YU8RAXoAAAAAAXoAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////wxCLi1MZTIwMTZhYTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJPAAUABQAACiBjdQAAAAAAAAAAAAAAAAAGUGFwZXJzAAIAQy86VXNlcnM6c21sZWU6RG9jdW1lbnRzOlJlc2VhcmNoOmNvaW5zZS13b3JrZGlyOlBhcGVyczpCLi1MZTIwMTZhYTAAAA4AGgAMAEIALgAtAEwAZQAyADAAMQA2AGEAYQAwAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAQVVzZXJzL3NtbGVlL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvQi4tTGUyMDE2YWEwAAATAAEvAAAVAAIADP//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANUA2gDiAmACYgJnAnICewKJAo0ClAKdAqICrwKyAsQCxwLMAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAs4=},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2931037.2931049},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2931037.2931049}}

@inproceedings{Soltani:2017aa,
	Acmid = {3097394},
	Address = {Piscataway, NJ, USA},
	Author = {Soltani, Mozhan and Panichella, Annibale and van Deursen, Arie},
	Booktitle = {Proceedings of the 39th International Conference on Software Engineering},
	Date-Added = {2017-06-29 08:12:18 +0000},
	Date-Modified = {2017-12-13 14:35:57 +0000},
	Doi = {10.1109/ICSE.2017.27},
	Isbn = {978-1-5386-3868-2},
	Keywords = {SBSE; SBST; Genetic Algorithm (GA); Automated Crash Reproduction; EvoCrash; EvoSuite},
	Location = {Buenos Aires, Argentina},
	Numpages = {12},
	Pages = {209--220},
	Publisher = {IEEE Press},
	Series = {ICSE '17},
	Title = {A Guided Genetic Algorithm for Automated Crash Reproduction},
	Url = {https://doi.org/10.1109/ICSE.2017.27},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9SZXNlYXJjaC9jb2luc2Utd29ya2Rpci9QYXBlcnMvU29sdGFuaTIwMTdhYTDSFwsYGVdOUy5kYXRhTxEBggAAAAABggACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DlNvbHRhbmkyMDE3YWEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk8ABQAFAAAKIGN1AAAAAAAAAAAAAAAAAAZQYXBlcnMAAgBFLzpVc2VyczpzbWxlZTpEb2N1bWVudHM6UmVzZWFyY2g6Y29pbnNlLXdvcmtkaXI6UGFwZXJzOlNvbHRhbmkyMDE3YWEwAAAOAB4ADgBTAG8AbAB0AGEAbgBpADIAMAAxADcAYQBhADAADwAaAAwATQBhAGMAaQBuAHQAbwBzAGgAIABIAEQAEgBDVXNlcnMvc21sZWUvRG9jdW1lbnRzL1Jlc2VhcmNoL2NvaW5zZS13b3JrZGlyL1BhcGVycy9Tb2x0YW5pMjAxN2FhMAAAEwABLwAAFQACAAz//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5AJqAmwCcQJ8AoUCkwKXAp4CpwKsArkCvALOAtEC1gAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAALY},
	Bdsk-Url-1 = {https://doi.org/10.1109/ICSE.2017.27},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/ICSE.2017.27}}
